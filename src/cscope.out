cscope 15 /home/hanyang/jjo/cache_code/extremestorage/src               0000098731
	@dm-writeboost-daemon.c

20 
	~"dm-wrôeboo°.h
"

21 
	~"dm-wrôeboo°-mëad©a.h
"

22 
	~"dm-wrôeboo°-d´m⁄.h
"

24 
	~<löux/rbåì.h
>

26 
	#ACACHE


	)

28 #ifde‡
ACACHE


36 
	$check_io_∑âîn
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
)

38 
u8
 
i
 = 0;

39 
u64
 
¥ev_£˘‹
 = 0;

40 
£quítül_cou¡
 = 0;

41 
mëablock
 *
mb
 = 
£g
->
mb_¨øy
;

42 
¥ev_£˘‹
 = 
mb
->
£˘‹
;

43 
	`¥ötk
("check_io_∑âîn(ËÀngth: %Œu\n",
£g
->
Àngth
);

44 
i
 = 1; i < 
£g
->
Àngth
; i++) {

45 
mb
 = 
£g
->
mb_¨øy
 + 
i
;

46 i‡(
¥ev_£˘‹
 =
mb
->
£˘‹
 - 8)

47 
£quítül_cou¡
++;

49 
£quítül_cou¡
--;

51 
¥ev_£˘‹
 = 
mb
->
£˘‹
;

54 
	`¥ötk
("check_io_∑âîn(): seq_cou¡: %u\n",
£quítül_cou¡
);

56 i‡(
wb
->
£quítül_thªshﬁd
 > 
£quítül_cou¡
)

58  
£quítül_cou¡
;

59 
	}
}

68 
	$£quítül_wrôe
(
wb_devi˚
 *
wb
, 
ømbuf„r
 *
ømbuf
, 
£gmít_hódî
 *
£g
)

70 
u8
 
i
, 
j
;

71 
mëablock
 *
mb
;

72 
	`¥ötk
("segment_write\n");

74 
i
 = 0; i < 
£g
->
Àngth
 ; i++) {

75 
mb
 = 
£g
->
mb_¨øy
 + 
i
;

77 i‡(
mb
->
dútöess
.
is_dúty
)

78 
mb
->
dútöess
.
is_dúty
 = 
Ál£
;

81 i‡(255 =
mb
->
dútöess
.
d©a_bôs
) {

82 
dm_io_ªque°
 
io_ªq
 = {

83 
WB_IO_WRITE
,

84 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

85 .
nŸify
.
‚
 = 
NULL
,

86 .
mem
.
ty≥
 = 
DM_IO_VMA
,

87 .
mem
.
±r
.
addr
 = 
ømbuf
->
d©a
 + (
i
 << 12),

89 
dm_io_ªgi⁄
 
ªgi⁄
 = {

90 .
bdev
 = 
wb
->
backög_dev
->bdev,

91 .
£˘‹
 = 
mb
->sector,

92 .
cou¡
 = 1 << 3,

94 i‡(
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
)) {

95 
	`¥ötk
("segment_write_throgh 4KB writeÉrror..\n");

99 
	`¥ötk
("bô wrôêIO debug: d©a:%Œu, se˘‹: %Œu, _bôs: %u\n",
ømbuf
->
d©a
+(
i
<<12),
mb
->
£˘‹
,mb->
dútöess
.
d©a_bôs
);

100 
j
 = 0; j < 8; j++) {

101 
dm_io_ªque°
 
io_ªq
;

102 
dm_io_ªgi⁄
 
ªgi⁄
;

104 
boﬁ
 
bô_⁄
 = 
mb
->
dútöess
.
d©a_bôs
 & (1 << 
j
);

105 i‡(!
bô_⁄
)

108 
io_ªq
 = (
dm_io_ªque°
) {

109 
WB_IO_WRITE
,

110 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

111 .
nŸify
.
‚
 = 
NULL
,

112 .
mem
.
ty≥
 = 
DM_IO_VMA
,

113 .
mem
.
±r
.
addr
 = 
ømbuf
->
d©a
 + ((
i
 << 12Ë+ (
j
 << 9)),

115 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

116 .
bdev
 = 
wb
->
backög_dev
->bdev,

117 .
£˘‹
 = 
mb
->£˘‹ + 
j
,

118 .
cou¡
 = 1,

120 i‡(
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
)) {

121 
	`¥ötk
("segment_write_throgh 512KB writeÉrror..\n");

128 
	}
}

134 
	$queue_b¨rõr_io
(
wb_devi˚
 *
wb
, 
bio
 *bio)

136 
	`muãx_lock
(&
wb
->
io_lock
);

137 
	`bio_li°_add
(&
wb
->
b¨rõr_ios
, 
bio
);

138 
	`muãx_u∆ock
(&
wb
->
io_lock
);

144 
	`queue_w‹k
(
wb
->
b¨rõr_wq
, &wb->
Êush_b¨rõr_w‹k
);

145 
	}
}

147 
	$Êush_b¨rõr_ios
(
w‹k_°ru˘
 *
w‹k
)

149 
wb_devi˚
 *
wb
 = 
	`c⁄èöî_of
(

150 
w‹k
, 
wb_devi˚
, 
Êush_b¨rõr_w‹k
);

152 i‡(
	`bio_li°_em±y
(&
wb
->
b¨rõr_ios
))

155 
	`©omic64_öc
(&
wb
->
cou¡_n⁄_fuŒ_Êushed
);

156 
	`Êush_cuºít_buf„r
(
wb
);

157 
	}
}

161 
	$¥o˚ss_de„ºed_b¨rõrs
(
wb_devi˚
 *
wb
, 
ømbuf„r
 *
ømbuf
)

163 
boﬁ
 
has_b¨rõr
 = !
	`bio_li°_em±y
(&
ømbuf
->
b¨rõr_ios
);

164 i‡(
has_b¨rõr
) {

165 
bio
 *bio;

168 
îr
 = 
	`blkdev_issue_Êush
(
wb
->
ˇche_dev
->
bdev
, 
GFP_NOIO
, 
NULL
);

171 (
bio
 = 
	`bio_li°_p›
(&
ømbuf
->
b¨rõr_ios
)))

179 i‡(
	`u∆ikñy
(
îr
))

180 
	`bio_io_îr‹
(
bio
);

182 
	`bio_io_suc˚ss_com∑t
(
bio
);

184 
	}
}

186 
boﬁ
 
	$should_Êush
(
wb_devi˚
 *
wb
)

188  
	`©omic64_ªad
(&
wb
->
œ°_queued_£gmít_id
) >

189 
	`©omic64_ªad
(&
wb
->
œ°_Êushed_£gmít_id
);

190 
	}
}

192 
	$do_Êush_¥oc
(
wb_devi˚
 *
wb
)

194 
£gmít_hódî
 *
£g
;

195 
ømbuf„r
 *
ømbuf
;

196 
u64
 
id
;

197 
dm_io_ªque°
 
io_ªq
;

198 
dm_io_ªgi⁄
 
ªgi⁄
;

200 i‡(!
	`should_Êush
(
wb
)) {

201 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(1000));

205 
id
 = 
	`©omic64_ªad
(&
wb
->
œ°_Êushed_£gmít_id
) + 1;

207 
	`smp_rmb
();

209 
ømbuf
 = 
	`gë_ømbuf„r_by_id
(
wb
, 
id
);

210 
£g
 = 
ømbuf
->seg;

212 #ifde‡
ACACHE


213 
	`¥ötk
("£g id: %u,Ñambu‡id: %u, check iÿ∑âí: %u\n",
£g
->
id
,id,
	`check_io_∑âîn
(
wb
, seg));

214 i‡(!
wb
->
ad≠tive_wrôe_mode
) {

215 
io_ªq
 = (
dm_io_ªque°
) {

216 
WB_IO_WRITE
,

217 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

218 .
nŸify
.
‚
 = 
NULL
,

219 .
mem
.
ty≥
 = 
DM_IO_VMA
,

220 .
mem
.
±r
.
addr
 = 
ømbuf
->
d©a
,

222 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

223 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

224 .
£˘‹
 = 
£g
->
°¨t_£˘‹
,

225 .
cou¡
 = (
£g
->
Àngth
 + 1) << 3,

228 i‡(
	`check_io_∑âîn
(
wb
, 
£g
)) {

229 
	`¥ötk
("sequential io check!!\n");

230 
	`£quítül_wrôe
(
wb
, 
ømbuf
, 
£g
);

232 
	`¥ötk
("random io check!!\n");

233 
io_ªq
 = (
dm_io_ªque°
) {

234 
WB_IO_WRITE
,

235 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

236 .
nŸify
.
‚
 = 
NULL
,

237 .
mem
.
ty≥
 = 
DM_IO_VMA
,

238 .
mem
.
±r
.
addr
 = 
ømbuf
->
d©a
,

240 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

241 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

242 .
£˘‹
 = 
£g
->
°¨t_£˘‹
,

243 .
cou¡
 = (
£g
->
Àngth
 + 1) << 3,

245 i‡(
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
))

250 
io_ªq
 = (
dm_io_ªque°
) {

251 
WB_IO_WRITE
,

252 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

253 .
nŸify
.
‚
 = 
NULL
,

254 .
mem
.
ty≥
 = 
DM_IO_VMA
,

255 .
mem
.
±r
.
addr
 = 
ømbuf
->
d©a
,

257 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

258 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

259 .
£˘‹
 = 
£g
->
°¨t_£˘‹
,

260 .
cou¡
 = (
£g
->
Àngth
 + 1) << 3,

262 i‡(
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
))

271 
	`¥o˚ss_de„ºed_b¨rõrs
(
wb
, 
ømbuf
);

277 
	`smp_wmb
();

278 
	`©omic64_öc
(&
wb
->
œ°_Êushed_£gmít_id
);

279 
	`wake_up
(&
wb
->
Êush_waô_queue
);

280 
	}
}

282 
	$Êush_d´m⁄_¥oc
(*
d©a
)

284 
wb_devi˚
 *
wb
 = 
d©a
;

285 !
	`kthªad_should_°›
())

286 
	`do_Êush_¥oc
(
wb
);

288 
	}
}

290 
	$waô_f‹_Êushög
(
wb_devi˚
 *
wb
, 
u64
 
id
)

292 
	`waô_evít
(
wb
->
Êush_waô_queue
,

293 
	`©omic64_ªad
(&
wb
->
œ°_Êushed_£gmít_id
Ë>
id
);

294 
	`smp_rmb
();

295 
	}
}

299 
	$wrôeback_ídio
(
îr‹
, *
c⁄ãxt
)

301 
wb_devi˚
 *
wb
 = 
c⁄ãxt
;

303 i‡(
îr‹
)

304 
	`©omic_öc
(&
wb
->
wrôeback_Áû_cou¡
);

306 i‡(
	`©omic_dec_™d_ã°
(&
wb
->
wrôeback_io_cou¡
))

307 
	`wake_up
(&
wb
->
wrôeback_io_waô_queue
);

308 
	}
}

310 
	$submô_wrôeback_io
(
wb_devi˚
 *
wb
, 
wrôeback_io
 *writeback_io)

312 
	`ASSERT
(
wrôeback_io
->
d©a_bôs
 > 0);

314 i‡(
wrôeback_io
->
d©a_bôs
 == 255) {

315 
dm_io_ªque°
 
io_ªq_w
 = {

316 
WB_IO_WRITE
,

317 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

318 .
nŸify
.
‚
 = 
wrôeback_ídio
,

319 .
nŸify
.
c⁄ãxt
 = 
wb
,

320 .
mem
.
ty≥
 = 
DM_IO_VMA
,

321 .
mem
.
±r
.
addr
 = 
wrôeback_io
->
d©a
,

323 
dm_io_ªgi⁄
 
ªgi⁄_w
 = {

324 .
bdev
 = 
wb
->
backög_dev
->bdev,

325 .
£˘‹
 = 
wrôeback_io
->sector,

326 .
cou¡
 = 1 << 3,

328 i‡(
	`wb_io
(&
io_ªq_w
, 1, &
ªgi⁄_w
, 
NULL
, 
Ál£
))

329 
	`wrôeback_ídio
(1, 
wb
);

331 
u8
 
i
;

332 
i
 = 0; i < 8; i++) {

333 
dm_io_ªque°
 
io_ªq_w
;

334 
dm_io_ªgi⁄
 
ªgi⁄_w
;

336 
boﬁ
 
bô_⁄
 = 
wrôeback_io
->
d©a_bôs
 & (1 << 
i
);

337 i‡(!
bô_⁄
)

340 
io_ªq_w
 = (
dm_io_ªque°
) {

341 
WB_IO_WRITE
,

342 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

343 .
nŸify
.
‚
 = 
wrôeback_ídio
,

344 .
nŸify
.
c⁄ãxt
 = 
wb
,

345 .
mem
.
ty≥
 = 
DM_IO_VMA
,

346 .
mem
.
±r
.
addr
 = 
wrôeback_io
->
d©a
 + (
i
 << 9),

348 
ªgi⁄_w
 = (
dm_io_ªgi⁄
) {

349 .
bdev
 = 
wb
->
backög_dev
->bdev,

350 .
£˘‹
 = 
wrôeback_io
->£˘‹ + 
i
,

351 .
cou¡
 = 1,

353 i‡(
	`wb_io
(&
io_ªq_w
, 1, &
ªgi⁄_w
, 
NULL
, 
Ál£
))

354 
	`wrôeback_ídio
(1, 
wb
);

357 
	}
}

359 
	$submô_wrôeback_ios
(
wb_devi˚
 *
wb
)

361 
blk_∂ug
 
∂ug
;

362 
rb_roŸ
 
wt
 = 
wb
->
wrôeback_åì
;

363 
	`blk_°¨t_∂ug
(&
∂ug
);

364 !
	`RB_EMPTY_ROOT
(&
wt
)) {

365 
wrôeback_io
 *wrôeback_iÿ
	`wrôeback_io_‰om_node
(
	`rb_fú°
(&
wt
));

366 
	`rb_îa£
(&
wrôeback_io
->
rb_node
, &
wt
);

367 
	`submô_wrôeback_io
(
wb
, 
wrôeback_io
);

369 
	`blk_föish_∂ug
(&
∂ug
);

370 
	}
}

380 
boﬁ
 
	$com∑ª_wrôeback_io
(
wrôeback_io
 *
a
, wrôeback_iÿ*
b
)

382 
	`ASSERT
(
a
);

383 
	`ASSERT
(
b
);

384 i‡(
a
->
£˘‹
 < 
b
->sector)

385  
åue
;

386 i‡(
a
->
id
 < 
b
->id)

387  
åue
;

388  
Ál£
;

389 
	}
}

391 
	$öc_wrôeback_io_cou¡
(
u8
 
d©a_bôs
, 
size_t
 *
wrôeback_io_cou¡
)

393 i‡(
d©a_bôs
 == 255) {

394 (*
wrôeback_io_cou¡
)++;

396 
u8
 
i
;

397 
i
 = 0; i < 8; i++) {

398 i‡(
d©a_bôs
 & (1 << 
i
))

399 (*
wrôeback_io_cou¡
)++;

402 
	}
}

408 
	$add_wrôeback_io
(
wb_devi˚
 *
wb
, 
wrôeback_io
 *writeback_io)

410 
rb_node
 **
rbp
, *
∑ª¡
;

411 
rbp
 = &
wb
->
wrôeback_åì
.
rb_node
;

412 
∑ª¡
 = 
NULL
;

413 *
rbp
) {

414 
wrôeback_io
 *
∑ª¡_io
;

415 
∑ª¡
 = *
rbp
;

416 
∑ª¡_io
 = 
	`wrôeback_io_‰om_node
(
∑ª¡
);

418 i‡(
	`com∑ª_wrôeback_io
(
wrôeback_io
, 
∑ª¡_io
))

419 
rbp
 = &(*rbp)->
rb_À·
;

421 
rbp
 = &(*rbp)->
rb_right
;

423 
	`rb_lök_node
(&
wrôeback_io
->
rb_node
, 
∑ª¡
, 
rbp
);

424 
	`rb_ö£π_cﬁ‹
(&
wrôeback_io
->
rb_node
, &
wb
->
wrôeback_åì
);

425 
	}
}

427 
	$fûl_wrôeback_£g
(
wb_devi˚
 *
wb
, 
wrôeback_£gmít
 *
wrôeback_£g
)

429 
£gmít_hódî
 *
£g
 = 
wrôeback_£g
->seg;

431 
dm_io_ªque°
 
io_ªq_r
 = {

432 
WB_IO_READ
,

433 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

434 .
nŸify
.
‚
 = 
NULL
,

435 .
mem
.
ty≥
 = 
DM_IO_VMA
,

436 .
mem
.
±r
.
addr
 = 
wrôeback_£g
->
buf
,

438 
dm_io_ªgi⁄
 
ªgi⁄_r
 = {

439 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

440 .
£˘‹
 = 
£g
->
°¨t_£˘‹
 + (1 << 3),

441 .
cou¡
 = 
£g
->
Àngth
 << 3,

448  
	`wb_io
(&
io_ªq_r
, 1, &
ªgi⁄_r
, 
NULL
, 
Ál£
);

449 
	}
}

451 
	$¥ï¨e_wrôeback_ios
(
wb_devi˚
 *
wb
, 
wrôeback_£gmít
 *
wrôeback_£g
,

452 
size_t
 *
wrôeback_io_cou¡
)

454 
£gmít_hódî
 *
£g
 = 
wrôeback_£g
->seg;

456 
u8
 
i
;

457 
i
 = 0; i < 
£g
->
Àngth
; i++) {

458 
wrôeback_io
 *writeback_io;

460 
mëablock
 *
mb
 = 
£g
->
mb_¨øy
 + 
i
;

461 
dútöess
 dútöes†
	`ªad_mb_dútöess
(
wb
, 
£g
, 
mb
);

462 
	`ASSERT
(
dútöess
.
d©a_bôs
 > 0);

464 i‡(!
dútöess
.
is_dúty
)

467 
wrôeback_io
 = 
wrôeback_£g
->
ios
 + 
i
;

468 
wrôeback_io
->
£˘‹
 = 
mb
->sector;

469 
wrôeback_io
->
id
 = 
£g
->id;

471 
wrôeback_io
->
d©a_bôs
 = 
dútöess
.data_bits;

473 
	`öc_wrôeback_io_cou¡
(
wrôeback_io
->
d©a_bôs
, 
wrôeback_io_cou¡
);

474 
	`add_wrôeback_io
(
wb
, 
wrôeback_io
);

476 
	}
}

478 
	$m¨k_˛ón_£g
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
)

480 
u8
 
i
;

481 
i
 = 0; i < 
£g
->
Àngth
; i++) {

482 
mëablock
 *
mb
 = 
£g
->
mb_¨øy
 + 
i
;

483 i‡(
	`m¨k_˛ón_mb
(
wb
, 
mb
))

484 
	`dec_ƒ_dúty_ˇches
(
wb
);

486 
	}
}

491 
boﬁ
 
	$åy_wrôeback_£gs
(
wb_devi˚
 *
wb
)

493 
wrôeback_£gmít
 *
wrôeback_£g
;

494 
size_t
 
wrôeback_io_cou¡
 = 0;

495 
u32
 
k
;

498 
wb
->
wrôeback_åì
 = 
RB_ROOT
;

499 
k
 = 0; k < 
wb
->
ƒ_cur_b©ched_wrôeback
; k++) {

500 
wrôeback_£g
 = *(
wb
->
wrôeback_£gs
 + 
k
);

502 i‡(
	`fûl_wrôeback_£g
(
wb
, 
wrôeback_£g
))

503  
Ál£
;

505 
	`¥ï¨e_wrôeback_ios
(
wb
, 
wrôeback_£g
, &
wrôeback_io_cou¡
);

508 
	`©omic_£t
(&
wb
->
wrôeback_io_cou¡
, writeback_io_count);

509 
	`©omic_£t
(&
wb
->
wrôeback_Áû_cou¡
, 0);

512 
	`submô_wrôeback_ios
(
wb
);

513 
	`waô_evít
(
wb
->
wrôeback_io_waô_queue
, !
	`©omic_ªad
(&wb->
wrôeback_io_cou¡
));

515  
	`©omic_ªad
(&
wb
->
wrôeback_Áû_cou¡
) == 0;

516 
	}
}

518 
boﬁ
 
	$do_wrôeback_£gs
(
wb_devi˚
 *
wb
)

520 i‡(!
	`åy_wrôeback_£gs
(
wb
))

521  
Ál£
;

523 
	`blkdev_issue_Êush
(
wb
->
backög_dev
->
bdev
, 
GFP_NOIO
, 
NULL
);

524  
åue
;

525 
	}
}

530 
	$upd©e_ƒ_em±y_£gs
(
wb_devi˚
 *
wb
)

533 
wb
->
ƒ_em±y_£gs
 =

534 
	`©omic64_ªad
(&
wb
->
œ°_wrôeback_£gmít_id
Ë+ wb->
ƒ_£gmíts


535 - 
wb
->
cuºít_£g
->
id
;

536 
	}
}

539 
u32
 
	$ˇlc_ƒ_wrôeback
(
wb_devi˚
 *
wb
)

541 
u32
 
ƒ_wrôeback_ˇndid©es
 =

542 
	`©omic64_ªad
(&
wb
->
œ°_Êushed_£gmít_id
)

543 - 
	`©omic64_ªad
(&
wb
->
œ°_wrôeback_£gmít_id
);

546 
u32
 
ƒ_max_b©ch
 = 
	`ACCESS_ONCE
(
wb
->
ƒ_max_b©ched_wrôeback
);

547 i‡(
wb
->
ƒ_wrôeback_£gs
 !
ƒ_max_b©ch
)

548 
	`åy_Æloc_wrôeback_ios
(
wb
, 
ƒ_max_b©ch
, 
GFP_NOIO
 | 
__GFP_NOWARN
);

555  
	`mö3
(
ƒ_wrôeback_ˇndid©es
, 
wb
->
ƒ_wrôeback_£gs
, wb->
ƒ_em±y_£gs
 + 1);

556 
	}
}

558 
boﬁ
 
	$should_wrôeback
(
wb_devi˚
 *
wb
)

560  
	`ACCESS_ONCE
(
wb
->
Ælow_wrôeback
) ||

561 
	`ACCESS_ONCE
(
wb
->
urge_wrôeback
) ||

562 
	`ACCESS_ONCE
(
wb
->
f‹˚_dr›
);

563 
	}
}

565 
	$do_wrôeback_¥oc
(
wb_devi˚
 *
wb
)

567 
u32
 
k
, 
ƒ_wrôeback_tbd
;

569 i‡(!
	`should_wrôeback
(
wb
)) {

570 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(1000));

574 
ƒ_wrôeback_tbd
 = 
	`ˇlc_ƒ_wrôeback
(
wb
);

575 i‡(!
ƒ_wrôeback_tbd
) {

576 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(1000));

580 
	`smp_rmb
();

583 
k
 = 0; k < 
ƒ_wrôeback_tbd
; k++) {

584 
wrôeback_£gmít
 *
wrôeback_£g
 = *(
wb
->
wrôeback_£gs
 + 
k
);

585 
wrôeback_£g
->
£g
 = 
	`gë_£gmít_hódî_by_id
(
wb
,

586 
	`©omic64_ªad
(&
wb
->
œ°_wrôeback_£gmít_id
Ë+ 1 + 
k
);

588 
wb
->
ƒ_cur_b©ched_wrôeback
 = 
ƒ_wrôeback_tbd
;

590 i‡(!
	`do_wrôeback_£gs
(
wb
))

594 
k
 = 0; k < 
wb
->
ƒ_cur_b©ched_wrôeback
; k++) {

595 
wrôeback_£gmít
 *
wrôeback_£g
 = *(
wb
->
wrôeback_£gs
 + 
k
);

596 
	`m¨k_˛ón_£g
(
wb
, 
wrôeback_£g
->
£g
);

599 
	`smp_wmb
();

600 
	`©omic64_add
(
wb
->
ƒ_cur_b©ched_wrôeback
, &wb->
œ°_wrôeback_£gmít_id
);

601 
	`wake_up
(&
wb
->
wrôeback_waô_queue
);

602 
	}
}

604 
	$wrôeback_d´m⁄_¥oc
(*
d©a
)

606 
wb_devi˚
 *
wb
 = 
d©a
;

607 !
	`kthªad_should_°›
())

608 
	`do_wrôeback_¥oc
(
wb
);

610 
	}
}

616 
	$waô_f‹_wrôeback
(
wb_devi˚
 *
wb
, 
u64
 
id
)

618 i‡(
	`©omic64_ªad
(&
wb
->
œ°_wrôeback_£gmít_id
Ë< 
id
) {

619 
wb
->
urge_wrôeback
 = 
åue
;

620 
	`wake_up_¥o˚ss
(
wb
->
wrôeback_d´m⁄
);

621 
	`waô_evít
(
wb
->
wrôeback_waô_queue
,

622 
	`©omic64_ªad
(&
wb
->
œ°_wrôeback_£gmít_id
Ë>
id
);

623 
wb
->
urge_wrôeback
 = 
Ál£
;

625 
	`smp_rmb
();

626 
	}
}

630 
	$wrôeback_moduœt‹_¥oc
(*
d©a
)

632 
wb_devi˚
 *
wb
 = 
d©a
;

634 
hd_°ru˘
 *
hd
 = 
wb
->
backög_dev
->
bdev
->
bd_∑π
;

635 
ﬁd
 = 0, 
√w
, 
utû
;

636 
ötvl
 = 1000;

638 !
	`kthªad_should_°›
()) {

639 
√w
 = 
	`jiffõs_to_m£cs
(
	`∑π_°©_ªad
(
hd
, 
io_ticks
));

641 
utû
 = 
	`div_u64
(100 * (
√w
 - 
ﬁd
), 1000);

643 i‡(
utû
 < 
	`ACCESS_ONCE
(
wb
->
wrôeback_thªshﬁd
))

644 
wb
->
Ælow_wrôeback
 = 
åue
;

646 
wb
->
Ælow_wrôeback
 = 
Ál£
;

648 
ﬁd
 = 
√w
;

650 
	`upd©e_ƒ_em±y_£gs
(
wb
);

652 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(
ötvl
));

655 
	}
}

659 
	$upd©e_su≥rblock_ªc‹d
(
wb_devi˚
 *
wb
)

661 
su≥rblock_ªc‹d_devi˚
 
o
;

662 *
buf
;

663 
dm_io_ªque°
 
io_ªq
;

664 
dm_io_ªgi⁄
 
ªgi⁄
;

666 
o
.
œ°_wrôeback_£gmít_id
 =

667 
	`˝u_to_À64
(
	`©omic64_ªad
(&
wb
->
œ°_wrôeback_£gmít_id
));

669 
buf
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_NOIO
);

670 i‡(!
buf
)

673 
	`mem£t
(
buf
, 0, 8 << 9);

674 
	`mem˝y
(
buf
 + (7 << 9), &
o
, (o));

676 
io_ªq
 = (
dm_io_ªque°
) {

677 
WB_IO_WRITE_FUA
,

678 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

679 .
nŸify
.
‚
 = 
NULL
,

680 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

681 .
mem
.
±r
.
addr
 = 
buf
,

683 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

684 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

685 .
£˘‹
 = (1 << 11) - 8,

686 .
cou¡
 = 8,

688 
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
);

690 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

691 
	}
}

693 
	$sb_ªc‹d_upd©î_¥oc
(*
d©a
)

695 
wb_devi˚
 *
wb
 = 
d©a
;

697 
ötvl
;

699 !
	`kthªad_should_°›
()) {

701 
ötvl
 = 
	`ACCESS_ONCE
(
wb
->
upd©e_sb_ªc‹d_öãrvÆ
) * 1000;

703 i‡(!
ötvl
) {

704 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(1000));

708 
	`upd©e_su≥rblock_ªc‹d
(
wb
);

709 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(
ötvl
));

712 
	}
}

716 
	$d©a_synchr⁄izî_¥oc
(*
d©a
)

718 
wb_devi˚
 *
wb
 = 
d©a
;

719 
ötvl
;

721 !
	`kthªad_should_°›
()) {

723 
ötvl
 = 
	`ACCESS_ONCE
(
wb
->
sync_d©a_öãrvÆ
) * 1000;

725 i‡(!
ötvl
) {

726 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(1000));

730 
	`Êush_cuºít_buf„r
(
wb
);

731 
	`blkdev_issue_Êush
(
wb
->
ˇche_dev
->
bdev
, 
GFP_NOIO
, 
NULL
);

732 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(
ötvl
));

735 
	}
}

	@dm-writeboost-daemon.h

20 #i‚de‡
DM_WRITEBOOST_DAEMON_H


21 
	#DM_WRITEBOOST_DAEMON_H


	)

25 
Êush_d´m⁄_¥oc
(*);

26 
waô_f‹_Êushög
(
wb_devi˚
 *, 
u64
 
id
);

30 
queue_b¨rõr_io
(
wb_devi˚
 *, 
bio
 *);

31 
Êush_b¨rõr_ios
(
w‹k_°ru˘
 *);

35 
upd©e_ƒ_em±y_£gs
(
wb_devi˚
 *);

36 
wrôeback_d´m⁄_¥oc
(*);

37 
waô_f‹_wrôeback
(
wb_devi˚
 *, 
u64
 
id
);

38 
m¨k_˛ón_£g
(
wb_devi˚
 *, 
£gmít_hódî
 *
£g
);

45 
wrôeback_moduœt‹_¥oc
(*);

49 
d©a_synchr⁄izî_¥oc
(*);

53 
sb_ªc‹d_upd©î_¥oc
(*);

	@dm-writeboost-metadata.c

20 
	~"dm-wrôeboo°.h
"

21 
	~"dm-wrôeboo°-mëad©a.h
"

22 
	~"dm-wrôeboo°-d´m⁄.h
"

26 
	sœrge_¨øy
 {

27 
u64
 
	mƒ_ñems
;

28 
u32
 
	mñemsize
;

29 *
	md©a
;

32 
œrge_¨øy
 *
	$œrge_¨øy_Æloc
(
u32
 
ñemsize
, 
u64
 
ƒ_ñems
)

34 
œrge_¨øy
 *
¨r
 = 
	`kmÆloc
((*¨r), 
GFP_KERNEL
);

35 i‡(!
¨r
) {

36 
	`DMERR
("FailedÅoállocateárr");

37  
NULL
;

41 
¨r
->
ñemsize
 =Élemsize;

42 
¨r
->
ƒ_ñems
 =Çr_elems;

44 
¨r
->
d©a
 = 
	`vmÆloc
(
ñemsize
 * 
ƒ_ñems
);

45 i‡(!
¨r
->
d©a
) {

46 
	`DMERR
("FailedÅoállocate data");

47 
bad_Æloc_d©a
;

50  
¨r
;

52 
bad_Æloc_d©a
:

53 
	`k‰ì
(
¨r
);

54  
NULL
;

55 
	}
}

57 
	$œrge_¨øy_‰ì
(
œrge_¨øy
 *
¨r
)

59 
	`v‰ì
(
¨r
->
d©a
);

60 
	`k‰ì
(
¨r
);

61 
	}
}

63 *
	$œrge_¨øy_©
(
œrge_¨øy
 *
¨r
, 
u64
 
i
)

66  
¨r
->
d©a
 +áº->
ñemsize
 * 
i
;

67 
	}
}

74 
mëablock
 *
	$mb_©
(
wb_devi˚
 *
wb
, 
u32
 
idx
)

76 
u32
 
idx_ö£g
;

77 
u32
 
£g_idx
 = 
	`div_u64_ªm
(
idx
, 
wb
->
ƒ_ˇches_ö£g
, &
idx_ö£g
);

78 
£gmít_hódî
 *
£g
 = 
	`œrge_¨øy_©
(
wb
->
£gmít_hódî_¨øy
, 
£g_idx
);

79  
£g
->
mb_¨øy
 + 
idx_ö£g
;

80 
	}
}

82 
	$mb_¨øy_em±y_öô
(
wb_devi˚
 *
wb
)

84 
u32
 
i
;

85 
i
 = 0; i < 
wb
->
ƒ_ˇches
; i++) {

86 
mëablock
 *
mb
 = 
	`mb_©
(
wb
, 
i
);

87 
	`INIT_HLIST_NODE
(&
mb
->
ht_li°
);

89 
mb
->
idx
 = 
i
;

90 
mb
->
dútöess
.
d©a_bôs
 = 0;

91 
mb
->
dútöess
.
is_dúty
 = 
Ál£
;

93 
	}
}

98 
£˘‹_t
 
	$ˇlc_£gmít_hódî_°¨t
(
wb_devi˚
 *
wb
, 
u32
 
k
)

100  (1 << 11Ë+ (1 << 
SEGMENT_SIZE_ORDER
Ë* 
k
;

101 
	}
}

103 
u32
 
	$ˇlc_ƒ_£gmíts
(
dm_dev
 *
dev
, 
wb_devi˚
 *
wb
)

105 
£˘‹_t
 
devsize
 = 
	`dm_devsize
(
dev
);

106  
	`div_u64
(
devsize
 - (1 << 11), 1 << 
SEGMENT_SIZE_ORDER
);

107 
	}
}

114 
u8
 
	$mb_idx_ö£g
(
wb_devi˚
 *
wb
, 
u32
 
mb_idx
)

116 
u32
 
tmp32
;

118 
	`div_u64_ªm
(
mb_idx
, 
wb
->
ƒ_ˇches_ö£g
, &
tmp32
);

119  
tmp32
;

120 
	}
}

125 
£˘‹_t
 
	$ˇlc_mb_°¨t_£˘‹
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
, 
u32
 
mb_idx
)

127  
£g
->
°¨t_£˘‹
 + ((1 + 
	`mb_idx_ö£g
(
wb
, 
mb_idx
)) << 3);

128 
	}
}

133 
£gmít_hódî
 *
	$mb_to_£g
(
wb_devi˚
 *
wb
, 
mëablock
 *
mb
)

135 
£gmít_hódî
 *
£g
;

136 
£g
 = ((*Ë
mb
)

137 - 
	`mb_idx_ö£g
(
wb
, 
mb
->
idx
Ë* (
mëablock
)

138 - (
£gmít_hódî
);

139  
£g
;

140 
	}
}

142 
boﬁ
 
	$is_⁄_buf„r
(
wb_devi˚
 *
wb
, 
u32
 
mb_idx
)

144 
u32
 
°¨t
 = 
wb
->
cuºít_£g
->
°¨t_idx
;

145 i‡(
mb_idx
 < 
°¨t
)

146  
Ál£
;

148 i‡(
mb_idx
 >(
°¨t
 + 
wb
->
ƒ_ˇches_ö£g
))

149  
Ál£
;

151  
åue
;

152 
	}
}

154 
u32
 
	$£gmít_id_to_idx
(
wb_devi˚
 *
wb
, 
u64
 
id
)

156 
u32
 
idx
;

157 
	`div_u64_ªm
(
id
 - 1, 
wb
->
ƒ_£gmíts
, &
idx
);

158  
idx
;

159 
	}
}

161 
£gmít_hódî
 *
	$£gmít_©
(
wb_devi˚
 *
wb
, 
u32
 
k
)

163  
	`œrge_¨øy_©
(
wb
->
£gmít_hódî_¨øy
, 
k
);

164 
	}
}

170 
£gmít_hódî
 *
	$gë_£gmít_hódî_by_id
(
wb_devi˚
 *
wb
, 
u64
 
id
)

172  
	`£gmít_©
(
wb
, 
	`£gmít_id_to_idx
(wb, 
id
));

173 
	}
}

177 
	$öô_£gmít_hódî_¨øy
(
wb_devi˚
 *
wb
)

179 
u32
 
£gmít_idx
;

181 
wb
->
£gmít_hódî_¨øy
 = 
	`œrge_¨øy_Æloc
(

182 (
£gmít_hódî
) +

183 (
mëablock
Ë* 
wb
->
ƒ_ˇches_ö£g
,

184 
wb
->
ƒ_£gmíts
);

185 i‡(!
wb
->
£gmít_hódî_¨øy
) {

186 
	`DMERR
("FailedÅoállocate segment_header_array");

187  -
ENOMEM
;

190 
£gmít_idx
 = 0; segmít_idx < 
wb
->
ƒ_£gmíts
; segment_idx++) {

191 
£gmít_hódî
 *
£g
 = 
	`œrge_¨øy_©
(
wb
->
£gmít_hódî_¨øy
, 
£gmít_idx
);

193 
£g
->
id
 = 0;

194 
£g
->
Àngth
 = 0;

195 
	`©omic_£t
(&
£g
->
ƒ_öÊight_ios
, 0);

198 
£g
->
°¨t_idx
 = 
wb
->
ƒ_ˇches_ö£g
 * 
£gmít_idx
;

199 
£g
->
°¨t_£˘‹
 = 
	`ˇlc_£gmít_hódî_°¨t
(
wb
, 
£gmít_idx
);

202 
	`mb_¨øy_em±y_öô
(
wb
);

205 
	}
}

207 
	$‰ì_£gmít_hódî_¨øy
(
wb_devi˚
 *
wb
)

209 
	`œrge_¨øy_‰ì
(
wb
->
£gmít_hódî_¨øy
);

210 
	}
}

214 
	sht_hód
 {

215 
hli°_hód
 
	mht_li°
;

218 
	$ht_em±y_öô
(
wb_devi˚
 *
wb
)

220 
u32
 
idx
;

221 
size_t
 
i
, 
ƒ_hóds
;

222 
œrge_¨øy
 *
¨r
;

224 
wb
->
htsize
 = wb->
ƒ_ˇches
;

225 
ƒ_hóds
 = 
wb
->
htsize
 + 1;

226 
¨r
 = 
	`œrge_¨øy_Æloc
((
ht_hód
), 
ƒ_hóds
);

227 i‡(!
¨r
) {

228 
	`DMERR
("FailedÅoállocate htable");

229  -
ENOMEM
;

233 
wb
->
hèbÀ
 = 
¨r
;

235 
i
 = 0; i < 
ƒ_hóds
; i++) {

236 
ht_hód
 *
hd
 = 
	`œrge_¨øy_©
(
¨r
, 
i
);

237 
	`INIT_HLIST_HEAD
(&
hd
->
ht_li°
);

240 
wb
->
nuŒ_hód
 = 
	`œrge_¨øy_©
(wb->
hèbÀ
, wb->
htsize
);

242 
idx
 = 0; idx < 
wb
->
ƒ_ˇches
; idx++) {

243 
mëablock
 *
mb
 = 
	`mb_©
(
wb
, 
idx
);

244 
	`hli°_add_hód
(&
mb
->
ht_li°
, &
wb
->
nuŒ_hód
->ht_list);

249 
	}
}

251 
	$‰ì_ht
(
wb_devi˚
 *
wb
)

253 
	`œrge_¨øy_‰ì
(
wb
->
hèbÀ
);

254 
	}
}

256 
ht_hód
 *
	$ht_gë_hód
(
wb_devi˚
 *
wb
, 
lookup_key
 *
key
)

258 
u32
 
idx
;

260 
	`div_u64_ªm
(
key
->
£˘‹
 >> 3, 
wb
->
htsize
, &
idx
);

261  
	`œrge_¨øy_©
(
wb
->
hèbÀ
, 
idx
);

262 
	}
}

264 
boﬁ
 
	$mb_hô
(
mëablock
 *
mb
, 
lookup_key
 *
key
)

266  
mb
->
£˘‹
 =
key
->sector;

267 
	}
}

272 
	$ht_dñ
(
wb_devi˚
 *
wb
, 
mëablock
 *
mb
)

274 
ht_hód
 *
nuŒ_hód
;

276 
	`hli°_dñ
(&
mb
->
ht_li°
);

278 
nuŒ_hód
 = 
wb
->null_head;

279 
	`hli°_add_hód
(&
mb
->
ht_li°
, &
nuŒ_hód
->ht_list);

280 
	}
}

282 
	$ht_ªgi°î
(
wb_devi˚
 *
wb
, 
ht_hód
 *
hód
,

283 
mëablock
 *
mb
, 
lookup_key
 *
key
)

285 
	`hli°_dñ
(&
mb
->
ht_li°
);

286 
	`hli°_add_hód
(&
mb
->
ht_li°
, &
hód
->ht_list);

288 
	`BUG_ON
(
key
->
£˘‹
 & 7);

289 
mb
->
£˘‹
 = 
key
->sector;

290 
	}
};

292 
mëablock
 *
	$ht_lookup
(
wb_devi˚
 *
wb
, 
ht_hód
 *
hód
,

293 
lookup_key
 *
key
)

295 
mëablock
 *
mb
, *
found
 = 
NULL
;

297 
	`hli°_f‹_óch_íåy
(
mb
, &
hód
->
ht_li°
, ht_list) {

298 i‡(
	`mb_hô
(
mb
, 
key
)) {

299 
found
 = 
mb
;

303  
found
;

304 
	}
}

309 
	$disˇrd_ˇches_ö£g
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
)

311 
u8
 
i
;

312 
i
 = 0; i < 
wb
->
ƒ_ˇches_ö£g
; i++) {

313 
mëablock
 *
mb
 = 
£g
->
mb_¨øy
 + 
i
;

314 
	`ht_dñ
(
wb
, 
mb
);

316 
	}
}

320 
	$ªad_su≥rblock_hódî
(
su≥rblock_hódî_devi˚
 *
sup
,

321 
wb_devi˚
 *
wb
)

323 
îr
 = 0;

324 
dm_io_ªque°
 
io_ªq_sup
;

325 
dm_io_ªgi⁄
 
ªgi⁄_sup
;

327 *
buf
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_KERNEL
);

328 i‡(!
buf
)

329  -
ENOMEM
;

330 
	`check_buf„r_Æignmít
(
buf
);

332 
io_ªq_sup
 = (
dm_io_ªque°
) {

333 
WB_IO_READ
,

334 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

335 .
nŸify
.
‚
 = 
NULL
,

336 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

337 .
mem
.
±r
.
addr
 = 
buf
,

339 
ªgi⁄_sup
 = (
dm_io_ªgi⁄
) {

340 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

341 .
£˘‹
 = 0,

342 .
cou¡
 = 8,

344 
îr
 = 
	`wb_io
(&
io_ªq_sup
, 1, &
ªgi⁄_sup
, 
NULL
, 
Ál£
);

345 i‡(
îr
)

346 
bad_io
;

348 
	`mem˝y
(
sup
, 
buf
, (*sup));

350 
bad_io
:

351 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

352  
îr
;

353 
	}
}

359 
	$audô_ˇche_devi˚
(
wb_devi˚
 *
wb
)

361 
îr
 = 0;

362 
su≥rblock_hódî_devi˚
 
sup
;

363 
îr
 = 
	`ªad_su≥rblock_hódî
(&
sup
, 
wb
);

364 i‡(
îr
) {

365 
	`DMERR
("read_superblock_header failed");

366  
îr
;

369 
wb
->
do_f‹m©
 = 
Ál£
;

370 i‡(
	`À32_to_˝u
(
sup
.
magic
Ë!
WB_MAGIC
 ||

371 
wb
->
wrôe_¨ound_mode
) {

372 
wb
->
do_f‹m©
 = 
åue
;

373 
	`DMERR
("Superblock Header: MagicÇumber invalid");

377  
îr
;

378 
	}
}

380 
	$f‹m©_su≥rblock_hódî
(
wb_devi˚
 *
wb
)

382 
îr
 = 0;

384 
dm_io_ªque°
 
io_ªq_sup
;

385 
dm_io_ªgi⁄
 
ªgi⁄_sup
;

387 
su≥rblock_hódî_devi˚
 
sup
 = {

388 .
magic
 = 
	`˝u_to_À32
(
WB_MAGIC
),

391 *
buf
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_KERNEL
);

392 i‡(!
buf
)

393  -
ENOMEM
;

395 
	`mem£t
(
buf
, 0, 8 << 9);

396 
	`mem˝y
(
buf
, &
sup
, (sup));

398 
io_ªq_sup
 = (
dm_io_ªque°
) {

399 
WB_IO_WRITE_FUA
,

400 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

401 .
nŸify
.
‚
 = 
NULL
,

402 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

403 .
mem
.
±r
.
addr
 = 
buf
,

405 
ªgi⁄_sup
 = (
dm_io_ªgi⁄
) {

406 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

407 .
£˘‹
 = 0,

408 .
cou¡
 = 8,

410 
îr
 = 
	`wb_io
(&
io_ªq_sup
, 1, &
ªgi⁄_sup
, 
NULL
, 
Ál£
);

411 i‡(
îr
)

412 
bad_io
;

414 
bad_io
:

415 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

416  
îr
;

417 
	}
}

419 
	sf‹m©_£gmd_c⁄ãxt
 {

420 
	mîr
;

421 
©omic64_t
 
	mcou¡
;

424 
	$f‹m©_£gmd_ídio
(
îr‹
, *
__c⁄ãxt
)

426 
f‹m©_£gmd_c⁄ãxt
 *
c⁄ãxt
 = 
__c⁄ãxt
;

427 i‡(
îr‹
)

428 
c⁄ãxt
->
îr
 = 1;

429 
	`©omic64_dec
(&
c⁄ãxt
->
cou¡
);

430 
	}
}

432 
	szîoög_c⁄ãxt
 {

433 
	mîr‹
;

434 
com∂ëi⁄
 
	mcom∂ëe
;

437 
	$zîoög_com∂ëe
(
ªad_îr
, 
wrôe_îr
, *
c⁄ãxt
)

439 
zîoög_c⁄ãxt
 *
zc
 = 
c⁄ãxt
;

440 i‡(
ªad_îr
 || 
wrôe_îr
)

441 
zc
->
îr‹
 = -
EIO
;

442 
	`com∂ëe
(&
zc
->
com∂ëe
);

443 
	}
}

448 
	$do_zîoög_ªgi⁄
(
wb_devi˚
 *
wb
, 
dm_io_ªgi⁄
 *
ªgi⁄
)

450 
îr
;

451 
zîoög_c⁄ãxt
 
zc
;

452 
zc
.
îr‹
 = 0;

453 
	`öô_com∂ëi⁄
(&
zc
.
com∂ëe
);

454 
îr
 = 
	`dm_kc›yd_zîo
(
wb
->
c›õr
, 1, 
ªgi⁄
, 0, 
zîoög_com∂ëe
, &
zc
);

455 i‡(
îr
)

456  
îr
;

457 
	`waô_f‹_com∂ëi⁄
(&
zc
.
com∂ëe
);

458  
zc
.
îr‹
;

459 
	}
}

461 
	$zîoög_fuŒ_su≥rblock
(
wb_devi˚
 *
wb
)

463 
dm_io_ªgi⁄
 
ªgi⁄
 = {

464 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

465 .
£˘‹
 = 0,

466 .
cou¡
 = 1 << 11,

468  
	`do_zîoög_ªgi⁄
(
wb
, &
ªgi⁄
);

469 
	}
}

471 
	$f‹m©_Æl_£gmít_hódîs
(
wb_devi˚
 *
wb
)

473 
îr
 = 0;

474 
dm_dev
 *
dev
 = 
wb
->
ˇche_dev
;

475 
u32
 
i
;

477 
f‹m©_£gmd_c⁄ãxt
 
c⁄ãxt
;

479 *
buf
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_KERNEL
);

480 i‡(!
buf
)

481  -
ENOMEM
;

483 
	`mem£t
(
buf
, 0, 8 << 9);

484 
	`check_buf„r_Æignmít
(
buf
);

486 
	`©omic64_£t
(&
c⁄ãxt
.
cou¡
, 
wb
->
ƒ_£gmíts
);

487 
c⁄ãxt
.
îr
 = 0;

490 
i
 = 0; i < 
wb
->
ƒ_£gmíts
; i++) {

491 
dm_io_ªque°
 
io_ªq_£g
 = {

492 
WB_IO_WRITE
,

493 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

494 .
nŸify
.
‚
 = 
f‹m©_£gmd_ídio
,

495 .
nŸify
.
c⁄ãxt
 = &context,

496 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

497 .
mem
.
±r
.
addr
 = 
buf
,

499 
dm_io_ªgi⁄
 
ªgi⁄_£g
 = {

500 .
bdev
 = 
dev
->bdev,

501 .
£˘‹
 = 
	`ˇlc_£gmít_hódî_°¨t
(
wb
, 
i
),

502 .
cou¡
 = (1 << 3),

504 
îr
 = 
	`wb_io
(&
io_ªq_£g
, 1, &
ªgi⁄_£g
, 
NULL
, 
Ál£
);

505 i‡(
îr
)

509 i‡(
îr
)

510 
bad
;

513 
	`©omic64_ªad
(&
c⁄ãxt
.
cou¡
))

514 
	`scheduÀ_timeout_öãºu±ibÀ
(
	`m£cs_to_jiffõs
(100));

516 i‡(
c⁄ãxt
.
îr
) {

517 
	`DMERR
("I/O failed");

518 
îr
 = -
EIO
;

519 
bad
;

522 
îr
 = 
	`blkdev_issue_Êush
(
dev
->
bdev
, 
GFP_KERNEL
, 
NULL
);

524 
bad
:

525 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

526  
îr
;

527 
	}
}

532 
	$f‹m©_ˇche_devi˚
(
wb_devi˚
 *
wb
)

534 
îr
 = 
	`zîoög_fuŒ_su≥rblock
(
wb
);

535 i‡(
îr
) {

536 
	`DMERR
("zeroing_full_superblock failed");

537  
îr
;

539 
îr
 = 
	`f‹m©_Æl_£gmít_hódîs
(
wb
);

540 i‡(
îr
) {

541 
	`DMERR
("format_all_segment_headers failed");

542  
îr
;

544 
îr
 = 
	`f‹m©_su≥rblock_hódî
(
wb
);

545 i‡(
îr
) {

546 
	`DMERR
("format_superblock_header failed");

547  
îr
;

549  
îr
;

550 
	}
}

558 
	$might_f‹m©_ˇche_devi˚
(
wb_devi˚
 *
wb
)

560 
îr
 = 0;

562 
îr
 = 
	`audô_ˇche_devi˚
(
wb
);

563 i‡(
îr
) {

564 
	`DMERR
("audit_cache_device failed");

565  
îr
;

568 i‡(
wb
->
do_f‹m©
) {

569 
îr
 = 
	`f‹m©_ˇche_devi˚
(
wb
);

570 i‡(
îr
) {

571 
	`DMERR
("format_cache_device failed");

572  
îr
;

576  
îr
;

577 
	}
}

581 
	$öô_ømbuf_poﬁ
(
wb_devi˚
 *
wb
)

583 
îr
 = 0;

584 
size_t
 
i
;

586 
wb
->
ømbuf_poﬁ
 = 
	`kmÆloc
((
ømbuf„r
Ë* 
NR_RAMBUF_POOL
, 
GFP_KERNEL
);

587 i‡(!
wb
->
ømbuf_poﬁ
)

588  -
ENOMEM
;

590 
i
 = 0; i < 
NR_RAMBUF_POOL
; i++) {

591 *
Ælo˚d
 = 
	`vmÆloc
(1 << (
SEGMENT_SIZE_ORDER
 + 9));

592 i‡(!
Ælo˚d
) {

593 
size_t
 
j
;

594 
	`DMERR
("FailedÅoállocateÑambuf->data");

595 
j
 = 0; j < 
i
; j++) {

596 
	`v‰ì
(
wb
->
ømbuf_poﬁ
[
j
].
d©a
);

598 
îr
 = -
ENOMEM
;

599 
bad_Æloc_d©a
;

601 
wb
->
ømbuf_poﬁ
[
i
].
d©a
 = 
Ælo˚d
;

604  
îr
;

606 
bad_Æloc_d©a
:

607 
	`k‰ì
(
wb
->
ømbuf_poﬁ
);

608  
îr
;

609 
	}
}

611 
	$‰ì_ømbuf_poﬁ
(
wb_devi˚
 *
wb
)

613 
size_t
 
i
;

614 
i
 = 0; i < 
NR_RAMBUF_POOL
; i++)

615 
	`v‰ì
(
wb
->
ømbuf_poﬁ
[
i
].
d©a
);

616 
	`k‰ì
(
wb
->
ømbuf_poﬁ
);

617 
	}
}

619 
ømbuf„r
 *
	$gë_ømbuf„r_by_id
(
wb_devi˚
 *
wb
, 
u64
 
id
)

621 
u32
 
tmp32
;

622 
	`div_u64_ªm
(
id
 - 1, 
NR_RAMBUF_POOL
, &
tmp32
);

623  
wb
->
ømbuf_poﬁ
 + 
tmp32
;

624 
	}
}

633 
	$öô_devi˚s
(
wb_devi˚
 *
wb
)

635 
îr
 = 0;

637 
îr
 = 
	`might_f‹m©_ˇche_devi˚
(
wb
);

638 i‡(
îr
)

639  
îr
;

641 
îr
 = 
	`öô_ømbuf_poﬁ
(
wb
);

642 i‡(
îr
) {

643 
	`DMERR
("init_rambuf_pool failed");

644  
îr
;

647  
îr
;

648 
	}
}

650 
	$‰ì_devi˚s
(
wb_devi˚
 *
wb
)

652 
	`‰ì_ømbuf_poﬁ
(
wb
);

653 
	}
}

657 
	$ªad_su≥rblock_ªc‹d
(
su≥rblock_ªc‹d_devi˚
 *
ªc‹d
,

658 
wb_devi˚
 *
wb
)

660 
îr
 = 0;

661 
dm_io_ªque°
 
io_ªq
;

662 
dm_io_ªgi⁄
 
ªgi⁄
;

664 *
buf
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_KERNEL
);

665 i‡(!
buf
)

666  -
ENOMEM
;

668 
	`check_buf„r_Æignmít
(
buf
);

670 
io_ªq
 = (
dm_io_ªque°
) {

671 
WB_IO_READ
,

672 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

673 .
nŸify
.
‚
 = 
NULL
,

674 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

675 .
mem
.
±r
.
addr
 = 
buf
,

677 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

678 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

679 .
£˘‹
 = (1 << 11) - 8,

680 .
cou¡
 = 8,

682 
îr
 = 
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
);

683 i‡(
îr
)

684 
bad_io
;

686 
	`mem˝y
(
ªc‹d
, 
buf
 + (7 << 9), (*record));

688 
bad_io
:

689 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

690  
îr
;

691 
	}
}

696 
	$ªad_whﬁe_£gmít
(*
buf
, 
wb_devi˚
 *
wb
,

697 
£gmít_hódî
 *
£g
)

699 
dm_io_ªque°
 
io_ªq
 = {

700 
WB_IO_READ
,

701 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

702 .
nŸify
.
‚
 = 
NULL
,

703 .
mem
.
ty≥
 = 
DM_IO_VMA
,

704 .
mem
.
±r
.
addr
 = 
buf
,

706 
dm_io_ªgi⁄
 
ªgi⁄
 = {

707 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

708 .
£˘‹
 = 
£g
->
°¨t_£˘‹
,

709 .
cou¡
 = 1 << 
SEGMENT_SIZE_ORDER
,

711  
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
);

712 
	}
}

718 
u32
 
	$ˇlc_checksum
(*
ømbuf„r
, 
u8
 
Àngth
)

720 
Àn
 = (4096 - 512Ë+ 4096 * 
Àngth
;

721  ~
	`¸c32c
(0xffffffff, 
ømbuf„r
 + 512, 
Àn
);

722 
	}
}

724 
	$¥ï¨e_£gmít_hódî_devi˚
(*
ømbuf„r
,

725 
wb_devi˚
 *
wb
,

726 
£gmít_hódî
 *
§c
)

728 
£gmít_hódî_devi˚
 *
de°
 = 
ømbuf„r
;

729 
u32
 
i
;

731 
	`ASSERT
((
§c
->
Àngth
Ë=(
wb
->
curs‹
 - src->
°¨t_idx
));

733 
i
 = 0; i < 
§c
->
Àngth
; i++) {

734 
mëablock
 *
mb
 = 
§c
->
mb_¨øy
 + 
i
;

735 
mëablock_devi˚
 *
mbdev
 = 
de°
->
mb¨r
 + 
i
;

737 
mbdev
->
£˘‹
 = 
	`˝u_to_À64
((
u64
)
mb
->sector);

738 
mbdev
->
dúty_bôs
 = 
mb
->
dútöess
.
is_dúty
 ? mb->dútöess.
d©a_bôs
 : 0;

741 
de°
->
id
 = 
	`˝u_to_À64
(
§c
->id);

742 
de°
->
Àngth
 = 
§c
->length;

743 
de°
->
checksum
 = 
	`˝u_to_À32
(
	`ˇlc_checksum
(
ømbuf„r
, 
§c
->
Àngth
));

744 
	}
}

751 
	$≠∂y_mëablock_devi˚
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
,

752 
£gmít_hódî_devi˚
 *
§c
, 
u8
 
i
)

754 
lookup_key
 
key
;

755 
ht_hód
 *
hód
;

756 
mëablock
 *
found
 = 
NULL
, *
mb
 = 
£g
->
mb_¨øy
 + 
i
;

757 
mëablock_devi˚
 *
mbdev
 = 
§c
->
mb¨r
 + 
i
;

759 
mb
->
£˘‹
 = 
	`À64_to_˝u
(
mbdev
->sector);

761 
mb
->
dútöess
.
d©a_bôs
 = 
mbdev
->
dúty_bôs
 ? mbdev->dirty_bits : 255;

762 
mb
->
dútöess
.
is_dúty
 = 
mbdev
->
dúty_bôs
 ? 
åue
 : 
Ál£
;

764 
key
 = (
lookup_key
) {

765 .
£˘‹
 = 
mb
->sector,

767 
hód
 = 
	`ht_gë_hód
(
wb
, &
key
);

768 
found
 = 
	`ht_lookup
(
wb
, 
hód
, &
key
);

769 i‡(
found
) {

770 
îr
 = 0;

771 
u8
 
i
;

772 
wrôe_io
 
wio
;

773 *
buf
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_KERNEL
);

774 i‡(!
buf
)

775  -
ENOMEM
;

777 
wio
 = (
wrôe_io
) {

778 .
d©a
 = 
buf
,

779 .
d©a_bôs
 = 0,

781 
îr
 = 
	`¥ï¨e_ovîwrôe
(
wb
, 
	`mb_to_£g
(wb, 
found
), found, &
wio
, 
mb
->
dútöess
.
d©a_bôs
);

782 i‡(
îr
)

783 
Áû_out
;

785 
i
 = 0; i < 8; i++) {

786 
dm_io_ªque°
 
io_ªq
;

787 
dm_io_ªgi⁄
 
ªgi⁄
;

788 i‡(!(
wio
.
d©a_bôs
 & (1 << 
i
)))

791 
io_ªq
 = (
dm_io_ªque°
) {

792 
WB_IO_WRITE
,

793 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

794 .
nŸify
.
‚
 = 
NULL
,

795 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

796 .
mem
.
±r
.
addr
 = 
wio
.
d©a
 + (
i
 << 9),

798 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

799 .
bdev
 = 
wb
->
backög_dev
->bdev,

800 .
£˘‹
 = 
mb
->£˘‹ + 
i
,

801 .
cou¡
 = 1,

803 
îr
 = 
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
åue
);

804 i‡(
îr
)

808 
Áû_out
:

809 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

810 i‡(
îr
)

811  
îr
;

814 
	`ht_ªgi°î
(
wb
, 
hód
, 
mb
, &
key
);

816 i‡(
mb
->
dútöess
.
is_dúty
)

817 
	`öc_ƒ_dúty_ˇches
(
wb
);

820 
	}
}

822 
	$≠∂y_£gmít_hódî_devi˚
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
,

823 
£gmít_hódî_devi˚
 *
§c
)

825 
îr
 = 0;

826 
u8
 
i
;

827 
£g
->
Àngth
 = 
§c
->length;

828 
i
 = 0; i < 
§c
->
Àngth
; i++) {

829 
îr
 = 
	`≠∂y_mëablock_devi˚
(
wb
, 
£g
, 
§c
, 
i
);

830 i‡(
îr
)

833  
îr
;

834 
	}
}

839 
	$ªad_£gmít_hódî
(*
buf
, 
wb_devi˚
 *
wb
,

840 
£gmít_hódî
 *
£g
)

842 
dm_io_ªque°
 
io_ªq
 = {

843 
WB_IO_READ
,

844 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

845 .
nŸify
.
‚
 = 
NULL
,

846 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

847 .
mem
.
±r
.
addr
 = 
buf
,

849 
dm_io_ªgi⁄
 
ªgi⁄
 = {

850 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

851 .
£˘‹
 = 
£g
->
°¨t_£˘‹
,

852 .
cou¡
 = 8,

854  
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
);

855 
	}
}

861 
	$do_föd_max_id
(
wb_devi˚
 *
wb
, 
u64
 *
max_id
)

863 
îr
 = 0;

864 
u32
 
k
;

866 *
buf
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_KERNEL
);

867 i‡(!
buf
)

868  -
ENOMEM
;

869 
	`check_buf„r_Æignmít
(
buf
);

871 *
max_id
 = 0;

872 
k
 = 0; k < 
wb
->
ƒ_£gmíts
; k++) {

873 
£gmít_hódî
 *
£g
 = 
	`£gmít_©
(
wb
, 
k
);

874 
£gmít_hódî_devi˚
 *
hódî
;

875 
îr
 = 
	`ªad_£gmít_hódî
(
buf
, 
wb
, 
£g
);

876 i‡(
îr
)

877 
out
;

879 
hódî
 = 
buf
;

880 i‡(
	`À64_to_˝u
(
hódî
->
id
Ë> *
max_id
)

881 *
max_id
 = 
	`À64_to_˝u
(
hódî
->
id
);

883 
out
:

884 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

885  
îr
;

886 
	}
}

888 
	$föd_max_id
(
wb_devi˚
 *
wb
, 
u64
 *
max_id
)

895 i‡(
wb
->
do_f‹m©
) {

896 *
max_id
 = 0;

900  
	`do_föd_max_id
(
wb
, 
max_id
);

901 
	}
}

913 
	$do_≠∂y_vÆid_£gmíts
(
wb_devi˚
 *
wb
, 
u64
 *
max_id
)

915 
îr
 = 0;

916 
£gmít_hódî
 *
£g
;

917 
£gmít_hódî_devi˚
 *
hódî
;

918 
u32
 
i
, 
°¨t_idx
;

920 *
ømbuf
 = 
	`vmÆloc
(1 << (
SEGMENT_SIZE_ORDER
 + 9));

921 i‡(!
ømbuf
)

922  -
ENOMEM
;

928 
°¨t_idx
 = 
	`£gmít_id_to_idx
(
wb
, *
max_id
 + 1);

929 *
max_id
 = 0;

931 
i
 = 
°¨t_idx
; i < (°¨t_idx + 
wb
->
ƒ_£gmíts
); i++) {

932 
u32
 
a˘uÆ
, 
ex≥˘ed
, 
k
;

933 
	`div_u64_ªm
(
i
, 
wb
->
ƒ_£gmíts
, &
k
);

934 
£g
 = 
	`£gmít_©
(
wb
, 
k
);

936 
îr
 = 
	`ªad_whﬁe_£gmít
(
ømbuf
, 
wb
, 
£g
);

937 i‡(
îr
)

940 
hódî
 = 
ømbuf
;

948 i‡(!
	`À64_to_˝u
(
hódî
->
id
))

955 
a˘uÆ
 = 
	`ˇlc_checksum
(
ømbuf
, 
hódî
->
Àngth
);

956 
ex≥˘ed
 = 
	`À32_to_˝u
(
hódî
->
checksum
);

957 i‡(
a˘uÆ
 !
ex≥˘ed
) {

958 
	`DMWARN
("Checksum incorrect id:%llu checksum: %u != %u",

959 (Ë
	`À64_to_˝u
(
hódî
->
id
),

960 
a˘uÆ
, 
ex≥˘ed
);

965 
îr
 = 
	`≠∂y_£gmít_hódî_devi˚
(
wb
, 
£g
, 
hódî
);

966 i‡(
îr
)

969 *
max_id
 = 
	`À64_to_˝u
(
hódî
->
id
);

972 
	`v‰ì
(
ømbuf
);

973  
îr
;

974 
	}
}

976 
	$≠∂y_vÆid_£gmíts
(
wb_devi˚
 *
wb
, 
u64
 *
max_id
)

983 i‡(!(*
max_id
))

986  
	`do_≠∂y_vÆid_£gmíts
(
wb
, 
max_id
);

987 
	}
}

989 
	$ö„r_œ°_wrôeback_id
(
wb_devi˚
 *
wb
)

991 
îr
 = 0;

993 
u64
 
ö„ºed_œ°_wrôeback_id
;

994 
u64
 
ªc‹d_id
;

996 
su≥rblock_ªc‹d_devi˚
 
	`unöôülized_v¨
(
ªc‹d
);

997 
îr
 = 
	`ªad_su≥rblock_ªc‹d
(&
ªc‹d
, 
wb
);

998 i‡(
îr
)

999  
îr
;

1001 
ö„ºed_œ°_wrôeback_id
 =

1002 
	`SUB_ID
(
	`©omic64_ªad
(&
wb
->
œ°_Êushed_£gmít_id
), wb->
ƒ_£gmíts
);

1009 
ªc‹d_id
 = 
	`À64_to_˝u
(
ªc‹d
.
œ°_wrôeback_£gmít_id
);

1010 i‡(
ªc‹d_id
 > 
ö„ºed_œ°_wrôeback_id
) {

1011 
u64
 
id
;

1012 
id
 = 
ö„ºed_œ°_wrôeback_id
 + 1; id <
ªc‹d_id
; id++)

1013 
	`m¨k_˛ón_£g
(
wb
, 
	`gë_£gmít_hódî_by_id
(wb, 
id
));

1014 
ö„ºed_œ°_wrôeback_id
 = 
ªc‹d_id
;

1017 
	`©omic64_£t
(&
wb
->
œ°_wrôeback_£gmít_id
, 
ö„ºed_œ°_wrôeback_id
);

1018  
îr
;

1019 
	}
}

1033 
	$ª∂ay_log_⁄_ˇche
(
wb_devi˚
 *
wb
)

1035 
îr
 = 0;

1037 
u64
 
max_id
;

1038 
îr
 = 
	`föd_max_id
(
wb
, &
max_id
);

1039 i‡(
îr
) {

1040 
	`DMERR
("find_max_id failed");

1041  
îr
;

1044 
îr
 = 
	`≠∂y_vÆid_£gmíts
(
wb
, &
max_id
);

1045 i‡(
îr
) {

1046 
	`DMERR
("apply_valid_segments failed");

1047  
îr
;

1051 
	`©omic64_£t
(&
wb
->
œ°_Êushed_£gmít_id
, 
max_id
);

1054 
	`©omic64_£t
(&
wb
->
œ°_queued_£gmít_id
, 
max_id
);

1057 
	`ö„r_œ°_wrôeback_id
(
wb
);

1059  
îr
;

1060 
	}
}

1065 
	$¥ï¨e_fú°_£g
(
wb_devi˚
 *
wb
)

1067 
u64
 
öô_£gmít_id
 = 
	`©omic64_ªad
(&
wb
->
œ°_Êushed_£gmít_id
) + 1;

1068 
	`acquúe_√w_£g
(
wb
, 
öô_£gmít_id
);

1069 
	`curs‹_öô
(
wb
);

1070 
	}
}

1075 
	$ªcovî_ˇche
(
wb_devi˚
 *
wb
)

1077 
îr
 = 0;

1079 
îr
 = 
	`ª∂ay_log_⁄_ˇche
(
wb
);

1080 i‡(
îr
) {

1081 
	`DMERR
("replay_log_on_cache failed");

1082  
îr
;

1085 
	`¥ï¨e_fú°_£g
(
wb
);

1087 
	}
}

1091 
wrôeback_£gmít
 *
	$Æloc_wrôeback_£gmít
(
wb_devi˚
 *
wb
, 
gÂ_t
 
gÂ
)

1093 
u8
 
i
;

1095 
wrôeback_£gmít
 *
wrôeback_£g
 = 
	`kmÆloc
((*wrôeback_£g), 
gÂ
);

1096 i‡(!
wrôeback_£g
)

1097 
bad_wrôeback_£g
;

1099 
wrôeback_£g
->
ios
 = 
	`kmÆloc
(
wb
->
ƒ_ˇches_ö£g
 * (
wrôeback_io
), 
gÂ
);

1100 i‡(!
wrôeback_£g
->
ios
)

1101 
bad_ios
;

1103 
wrôeback_£g
->
buf
 = 
	`vmÆloc
((1 << (
SEGMENT_SIZE_ORDER
 + 9)) - (1 << 12));

1104 i‡(!
wrôeback_£g
->
buf
)

1105 
bad_buf
;

1107 
i
 = 0; i < 
wb
->
ƒ_ˇches_ö£g
; i++) {

1108 
wrôeback_io
 *wrôeback_iÿ
wrôeback_£g
->
ios
 + 
i
;

1109 
wrôeback_io
->
d©a
 = 
wrôeback_£g
->
buf
 + (
i
 << 12);

1110 
	`¥ötk
("Æloc_wrôeback_£gmít(Ëd©a: %Œu, io_d©a: %Œu\n",
wrôeback_£g
->
buf
,
wrôeback_io
->
d©a
);

1113  
wrôeback_£g
;

1115 
bad_buf
:

1116 
	`k‰ì
(
wrôeback_£g
->
ios
);

1117 
bad_ios
:

1118 
	`k‰ì
(
wrôeback_£g
);

1119 
bad_wrôeback_£g
:

1120  
NULL
;

1121 
	}
}

1123 
	$‰ì_wrôeback_£gmít
(
wb_devi˚
 *
wb
, 
wrôeback_£gmít
 *
wrôeback_£g
)

1125 
	`v‰ì
(
wrôeback_£g
->
buf
);

1126 
	`k‰ì
(
wrôeback_£g
->
ios
);

1127 
	`k‰ì
(
wrôeback_£g
);

1128 
	}
}

1137 
	$‰ì_wrôeback_ios
(
wb_devi˚
 *
wb
)

1139 
size_t
 
i
;

1140 
i
 = 0; i < 
wb
->
ƒ_cur_b©ched_wrôeback
; i++)

1141 
	`‰ì_wrôeback_£gmít
(
wb
, *(wb->
wrôeback_£gs
 + 
i
));

1142 
	`k‰ì
(
wb
->
wrôeback_£gs
);

1143 
	}
}

1149 
	$åy_Æloc_wrôeback_ios
(
wb_devi˚
 *
wb
, 
size_t
 
ƒ_b©ch
, 
gÂ_t
 
gÂ
)

1151 
îr
 = 0;

1152 
size_t
 
i
;

1154 
wrôeback_£gmít
 **
wrôeback_£gs
 = 
	`kzÆloc
(

1155 
ƒ_b©ch
 * (
wrôeback_£gmít
 *), 
gÂ
);

1156 i‡(!
wrôeback_£gs
)

1157  -
ENOMEM
;

1159 
i
 = 0; i < 
ƒ_b©ch
; i++) {

1160 
wrôeback_£gmít
 *
Ælo˚d
 = 
	`Æloc_wrôeback_£gmít
(
wb
, 
gÂ
);

1161 i‡(!
Ælo˚d
) {

1162 
size_t
 
j
;

1163 
j
 = 0; j < 
i
; j++)

1164 
	`‰ì_wrôeback_£gmít
(
wb
, 
wrôeback_£gs
[
j
]);

1165 
	`k‰ì
(
wrôeback_£gs
);

1167 
	`DMERR
("FailedÅoállocate writeback_segs");

1168  -
ENOMEM
;

1170 
wrôeback_£gs
[
i
] = 
Ælo˚d
;

1177 i‡(
wb
->
wrôeback_£gs
)

1178 
	`‰ì_wrôeback_ios
(
wb
);

1181 
wb
->
wrôeback_£gs
 = writeback_segs;

1182 
wb
->
ƒ_wrôeback_£gs
 = 
ƒ_b©ch
;

1184  
îr
;

1185 
	}
}

1189 
	#CREATE_DAEMON
(
«me
) \

1191 
wb
->
«me
 = 
	`kthªad_¸óã
( \

1192 
«me
##
_¥oc
, 
wb
, "dmwb_" #name); \

1193 i‡(
	`IS_ERR
(
wb
->
«me
)) { \

1194 
îr
 = 
	`PTR_ERR
(
wb
->
«me
); \

1195 
wb
->
«me
 = 
NULL
; \

1196 
	`DMERR
("couldn't spawn " #name); \

1197 
bad_
##
«me
; \

1199 
	`wake_up_¥o˚ss
(
wb
->
«me
); \

1200 } 0)

	)

1210 
	$öô_mëad©a
(
wb_devi˚
 *
wb
)

1212 
îr
 = 0;

1214 
îr
 = 
	`öô_£gmít_hódî_¨øy
(
wb
);

1215 i‡(
îr
) {

1216 
	`DMERR
("init_segment_header_array failed");

1217 
bad_Æloc_£gmít_hódî_¨øy
;

1220 
îr
 = 
	`ht_em±y_öô
(
wb
);

1221 i‡(
îr
) {

1222 
	`DMERR
("ht_empty_init failed");

1223 
bad_Æloc_ht
;

1226  
îr
;

1228 
bad_Æloc_ht
:

1229 
	`‰ì_£gmít_hódî_¨øy
(
wb
);

1230 
bad_Æloc_£gmít_hódî_¨øy
:

1231  
îr
;

1232 
	}
}

1234 
	$‰ì_mëad©a
(
wb_devi˚
 *
wb
)

1236 
	`‰ì_ht
(
wb
);

1237 
	`‰ì_£gmít_hódî_¨øy
(
wb
);

1238 
	}
}

1240 
	$öô_wrôeback_d´m⁄
(
wb_devi˚
 *
wb
)

1242 
îr
 = 0;

1243 
size_t
 
ƒ_b©ch
;

1245 
	`©omic_£t
(&
wb
->
wrôeback_Áû_cou¡
, 0);

1246 
	`©omic_£t
(&
wb
->
wrôeback_io_cou¡
, 0);

1250 
ƒ_b©ch
 = 4096;

1253 
wb
->
ƒ_max_b©ched_wrôeback
 = 
ƒ_b©ch
;

1254 i‡(
	`åy_Æloc_wrôeback_ios
(
wb
, 
ƒ_b©ch
, 
GFP_KERNEL
))

1255  -
ENOMEM
;

1257 
	`öô_waôqueue_hód
(&
wb
->
wrôeback_waô_queue
);

1258 
	`öô_waôqueue_hód
(&
wb
->
waô_dr›_ˇches
);

1259 
	`öô_waôqueue_hód
(&
wb
->
wrôeback_io_waô_queue
);

1261 
wb
->
Ælow_wrôeback
 = 
Ál£
;

1262 
wb
->
urge_wrôeback
 = 
Ál£
;

1263 
wb
->
f‹˚_dr›
 = 
Ál£
;

1264 
	`CREATE_DAEMON
(
wrôeback_d´m⁄
);

1266  
îr
;

1268 
bad_wrôeback_d´m⁄
:

1269 
	`‰ì_wrôeback_ios
(
wb
);

1270  
îr
;

1271 
	}
}

1273 
	$öô_Êush_d´m⁄
(
wb_devi˚
 *
wb
)

1275 
îr
 = 0;

1276 
	`öô_waôqueue_hód
(&
wb
->
Êush_waô_queue
);

1277 
	`CREATE_DAEMON
(
Êush_d´m⁄
);

1278  
îr
;

1280 
bad_Êush_d´m⁄
:

1281  
îr
;

1282 
	}
}

1284 
	$öô_Êush_b¨rõr_w‹k
(
wb_devi˚
 *
wb
)

1286 
wb
->
b¨rõr_wq
 = 
	`¸óã_sögÀthªad_w‹kqueue
("dmwb_barrier");

1287 i‡(!
wb
->
b¨rõr_wq
) {

1288 
	`DMERR
("FailedÅoállocate barrier_wq");

1289  -
ENOMEM
;

1291 
	`bio_li°_öô
(&
wb
->
b¨rõr_ios
);

1292 
	`INIT_WORK
(&
wb
->
Êush_b¨rõr_w‹k
, 
Êush_b¨rõr_ios
);

1294 
	}
}

1296 
	$öô_wrôeback_moduœt‹
(
wb_devi˚
 *
wb
)

1298 
îr
 = 0;

1299 
wb
->
wrôeback_thªshﬁd
 = 0;

1300 
	`CREATE_DAEMON
(
wrôeback_moduœt‹
);

1301  
îr
;

1303 
bad_wrôeback_moduœt‹
:

1304  
îr
;

1305 
	}
}

1307 
	$öô_sb_ªc‹d_upd©î
(
wb_devi˚
 *
wb
)

1309 
îr
 = 0;

1310 
wb
->
upd©e_sb_ªc‹d_öãrvÆ
 = 0;

1311 
	`CREATE_DAEMON
(
sb_ªc‹d_upd©î
);

1312  
îr
;

1314 
bad_sb_ªc‹d_upd©î
:

1315  
îr
;

1316 
	}
}

1318 
	$öô_d©a_synchr⁄izî
(
wb_devi˚
 *
wb
)

1320 
îr
 = 0;

1321 
wb
->
sync_d©a_öãrvÆ
 = 0;

1322 
	`CREATE_DAEMON
(
d©a_synchr⁄izî
);

1323  
îr
;

1325 
bad_d©a_synchr⁄izî
:

1326  
îr
;

1327 
	}
}

1329 
	$ªsume_ˇche
(
wb_devi˚
 *
wb
)

1331 
îr
 = 0;

1333 
wb
->
ƒ_£gmíts
 = 
	`ˇlc_ƒ_£gmíts
(wb->
ˇche_dev
, wb);

1334 
wb
->
ƒ_ˇches_ö£g
 = (1 << (
SEGMENT_SIZE_ORDER
 - 3)) - 1;

1335 
wb
->
ƒ_ˇches
 = wb->
ƒ_£gmíts
 * wb->
ƒ_ˇches_ö£g
;

1337 
îr
 = 
	`öô_devi˚s
(
wb
);

1338 i‡(
îr
)

1339 
bad_devi˚s
;

1341 
îr
 = 
	`öô_mëad©a
(
wb
);

1342 i‡(
îr
)

1343 
bad_mëad©a
;

1345 
îr
 = 
	`öô_wrôeback_d´m⁄
(
wb
);

1346 i‡(
îr
) {

1347 
	`DMERR
("init_writeback_daemon failed");

1348 
bad_wrôeback_d´m⁄
;

1351 
îr
 = 
	`ªcovî_ˇche
(
wb
);

1352 i‡(
îr
) {

1353 
	`DMERR
("recover_cache failed");

1354 
bad_ªcovî
;

1357 
îr
 = 
	`öô_Êush_d´m⁄
(
wb
);

1358 i‡(
îr
) {

1359 
	`DMERR
("init_flush_daemon failed");

1360 
bad_Êush_d´m⁄
;

1363 
îr
 = 
	`öô_Êush_b¨rõr_w‹k
(
wb
);

1364 i‡(
îr
) {

1365 
	`DMERR
("init_flush_barrier_work failed");

1366 
bad_Êush_b¨rõr_w‹k
;

1369 
îr
 = 
	`öô_wrôeback_moduœt‹
(
wb
);

1370 i‡(
îr
) {

1371 
	`DMERR
("init_writeback_modulator failed");

1372 
bad_moduœt‹
;

1375 
îr
 = 
	`öô_sb_ªc‹d_upd©î
(
wb
);

1376 i‡(
îr
) {

1377 
	`DMERR
("init_sb_recorder failed");

1378 
bad_upd©î
;

1381 
îr
 = 
	`öô_d©a_synchr⁄izî
(
wb
);

1382 i‡(
îr
) {

1383 
	`DMERR
("init_data_synchronizer failed");

1384 
bad_synchr⁄izî
;

1387  
îr
;

1389 
bad_synchr⁄izî
:

1390 
	`kthªad_°›
(
wb
->
sb_ªc‹d_upd©î
);

1391 
bad_upd©î
:

1392 
	`kthªad_°›
(
wb
->
wrôeback_moduœt‹
);

1393 
bad_moduœt‹
:

1394 
	`de°roy_w‹kqueue
(
wb
->
b¨rõr_wq
);

1395 
bad_Êush_b¨rõr_w‹k
:

1396 
	`kthªad_°›
(
wb
->
Êush_d´m⁄
);

1397 
bad_Êush_d´m⁄
:

1398 
bad_ªcovî
:

1399 
	`kthªad_°›
(
wb
->
wrôeback_d´m⁄
);

1400 
	`‰ì_wrôeback_ios
(
wb
);

1401 
bad_wrôeback_d´m⁄
:

1402 
	`‰ì_mëad©a
(
wb
);

1403 
bad_mëad©a
:

1404 
	`‰ì_devi˚s
(
wb
);

1405 
bad_devi˚s
:

1406  
îr
;

1407 
	}
}

1409 
	$‰ì_ˇche
(
wb_devi˚
 *
wb
)

1415 
	`kthªad_°›
(
wb
->
d©a_synchr⁄izî
);

1416 
	`kthªad_°›
(
wb
->
sb_ªc‹d_upd©î
);

1417 
	`kthªad_°›
(
wb
->
wrôeback_moduœt‹
);

1419 
	`de°roy_w‹kqueue
(
wb
->
b¨rõr_wq
);

1421 
	`kthªad_°›
(
wb
->
Êush_d´m⁄
);

1423 
	`kthªad_°›
(
wb
->
wrôeback_d´m⁄
);

1424 
	`‰ì_wrôeback_ios
(
wb
);

1426 
	`‰ì_mëad©a
(
wb
);

1428 
	`‰ì_devi˚s
(
wb
);

1429 
	}
}

	@dm-writeboost-metadata.h

20 #i‚de‡
DM_WRITEBOOST_METADATA_H


21 
	#DM_WRITEBOOST_METADATA_H


	)

25 
£gmít_hódî
 *

26 
gë_£gmít_hódî_by_id
(
wb_devi˚
 *, 
u64
 
£gmít_id
);

27 
ømbuf„r
 *
gë_ømbuf„r_by_id
(
wb_devi˚
 *
wb
, 
u64
 
id
);

28 
£˘‹_t
 
ˇlc_mb_°¨t_£˘‹
(
wb_devi˚
 *, 
£gmít_hódî
 *,

29 
u32
 
mb_idx
);

30 
u8
 
mb_idx_ö£g
(
wb_devi˚
 *, 
u32
 
mb_idx
);

31 
£gmít_hódî
 *
mb_to_£g
(
wb_devi˚
 *, 
mëablock
 *);

32 
boﬁ
 
is_⁄_buf„r
(
wb_devi˚
 *, 
u32
 
mb_idx
);

36 
	slookup_key
 {

37 
£˘‹_t
 
	m£˘‹
;

40 
	ght_hód
;

41 
ht_hód
 *
ht_gë_hód
(
wb_devi˚
 *, 
lookup_key
 *);

42 
mëablock
 *
ht_lookup
(
wb_devi˚
 *,

43 
ht_hód
 *, 
lookup_key
 *);

44 
ht_ªgi°î
(
wb_devi˚
 *, 
ht_hód
 *,

45 
mëablock
 *, 
lookup_key
 *);

46 
ht_dñ
(
wb_devi˚
 *, 
mëablock
 *);

47 
disˇrd_ˇches_ö£g
(
wb_devi˚
 *, 
£gmít_hódî
 *);

51 
¥ï¨e_£gmít_hódî_devi˚
(*
ømbuf„r
, 
wb_devi˚
 *,

52 
£gmít_hódî
 *
§c
);

53 
u32
 
ˇlc_checksum
(*
ømbuf„r
, 
u8
 
Àngth
);

57 
åy_Æloc_wrôeback_ios
(
wb_devi˚
 *, 
size_t
 
ƒ_b©ch
, 
gÂ_t
 
gÂ
);

61 
ªsume_ˇche
(
wb_devi˚
 *);

62 
‰ì_ˇche
(
wb_devi˚
 *);

	@dm-writeboost-target.c

23 
	~"dm-wrôeboo°.h
"

24 
	~"dm-wrôeboo°-mëad©a.h
"

25 
	~"dm-wrôeboo°-d´m⁄.h
"

27 
	~"löux/s‹t.h
"

31 
	$do_check_buf„r_Æignmít
(*
buf
, c⁄° *
«me
, c⁄° *
ˇŒî
)

33 
addr
 = (Ë
buf
;

35 i‡(!
	`IS_ALIGNED
(
addr
, 1 << 9)) {

36 
	`DMCRIT
("@%†ö %†i†nŸ se˘‹-Æig√d. I/O buf„∏mu° bê£˘‹-Æig√d.", 
«me
, 
ˇŒî
);

37 
	`BUG
();

39 
	}
}

43 
	swb_io
 {

44 
w‹k_°ru˘
 
	mw‹k
;

45 
	mîr
;

46 
	mîr_bôs
;

47 
dm_io_ªque°
 *
	mio_ªq
;

48 
	mnum_ªgi⁄s
;

49 
dm_io_ªgi⁄
 *
	mªgi⁄s
;

52 
	$wb_io_‚
(
w‹k_°ru˘
 *
w‹k
)

54 
wb_io
 *
io
 = 
	`c⁄èöî_of
(
w‹k
, wb_io, work);

55 
io
->
îr_bôs
 = 0;

56 
io
->
îr
 = 
	`dm_io
(io->
io_ªq
, io->
num_ªgi⁄s
, io->
ªgi⁄s
, &io->
îr_bôs
);

57 
	}
}

59 
	$wb_io_öã∫Æ
(
wb_devi˚
 *
wb
, 
dm_io_ªque°
 *
io_ªq
,

60 
num_ªgi⁄s
, 
dm_io_ªgi⁄
 *
ªgi⁄s
,

61 *
îr_bôs
, 
boﬁ
 
thªad
, c⁄° *
ˇŒî
)

63 
îr
 = 0;

65 i‡(
thªad
) {

66 
wb_io
 
io
 = {

67 .
io_ªq
 = io_req,

68 .
ªgi⁄s
 =Ñegions,

69 .
num_ªgi⁄s
 =Çum_regions,

71 
	`ASSERT
(
io_ªq
->
nŸify
.
‚
 =
NULL
);

73 
	`INIT_WORK_ONSTACK
(&
io
.
w‹k
, 
wb_io_‚
);

74 
	`queue_w‹k
(
wb
->
io_wq
, &
io
.
w‹k
);

75 
	`Êush_w‹kqueue
(
wb
->
io_wq
);

76 
	`de°roy_w‹k_⁄_°ack
(&
io
.
w‹k
);

78 
îr
 = 
io
.err;

79 i‡(
îr_bôs
)

80 *
îr_bôs
 = 
io
.err_bits;

82 
îr
 = 
	`dm_io
(
io_ªq
, 
num_ªgi⁄s
, 
ªgi⁄s
, 
îr_bôs
);

86 i‡(
îr
 || (
îr_bôs
 && *err_bits)) {

87 
buf
[
BDEVNAME_SIZE
];

88 
dev_t
 
dev
 = 
ªgi⁄s
->
bdev
->
bd_dev
;

90 
eb
;

91 i‡(!
îr_bôs
)

92 
eb
 = (~()0);

94 
eb
 = *
îr_bôs
;

96 
	`f‹m©_dev_t
(
buf
, 
dev
);

97 
	`DMERR
("%s() I/OÉrror(%d), bits(%lu), dev(%s), sector(%llu), %s",

98 
ˇŒî
, 
îr
, 
eb
,

99 
buf
, (Ë
ªgi⁄s
->
£˘‹
,

100 
	`ªq_is_wrôe
(
io_ªq
) ? "write" : "read");

103  
îr
;

104 
	}
}

106 
£˘‹_t
 
	$dm_devsize
(
dm_dev
 *
dev
)

108  
	`i_size_ªad
(
dev
->
bdev
->
bd_öode
) >> 9;

109 
	}
}

113 
	$bio_io_suc˚ss_com∑t
(
bio
 *bio)

115 #i‡
LINUX_VERSION_CODE
 >
	`KERNEL_VERSION
(4,13,0)

116 
bio
->
bi_°©us
 = 
BLK_STS_OK
;

117 
	`bio_ídio
(
bio
);

118 #ñi‡
LINUX_VERSION_CODE
 >
	`KERNEL_VERSION
(4,3,0)

119 
bio
->
bi_îr‹
 = 0;

120 
	`bio_ídio
(
bio
);

122 
	`bio_ídio
(
bio
, 0);

124 
	}
}

126 #i‡
LINUX_VERSION_CODE
 >
KERNEL_VERSION
(3,14,0)

127 
	#bi_£˘‹
(
bio
Ë(bio)->
bi_ôî
.
bi_£˘‹


	)

129 
	#bi_£˘‹
(
bio
Ë(bio)->
bi_£˘‹


	)

132 
	$bio_ªm≠
(
bio
 *bio, 
dm_dev
 *
dev
, 
£˘‹_t
 
£˘‹
)

134 #i‡
LINUX_VERSION_CODE
 >
	`KERNEL_VERSION
(4,14,0)

135 
	`bio_£t_dev
(
bio
, 
dev
->
bdev
);

137 
bio
->
bi_bdev
 = 
dev
->
bdev
;

139 
	`bi_£˘‹
(
bio
Ë
£˘‹
;

140 
	}
}

142 
u8
 
	$ˇlc_off£t
(
£˘‹_t
 
£˘‹
)

144 
u32
 
tmp32
;

145 
	`div_u64_ªm
(
£˘‹
, 1 << 3, &
tmp32
);

146  
tmp32
;

147 
	}
}

149 
u8
 
	$bio_ˇlc_off£t
(
bio
 *bio)

151  
	`ˇlc_off£t
(
	`bi_£˘‹
(
bio
));

152 
	}
}

154 
boﬁ
 
	$bio_is_fuŒsize
(
bio
 *bio)

156  
	`bio_£˘‹s
(
bio
) == (1 << 3);

157 
	}
}

159 
boﬁ
 
	$bio_is_wrôe
(
bio
 *bio)

161  
	`bio_d©a_dú
(
bio
Ë=
WRITE
;

162 
	}
}

167 
£˘‹_t
 
	$ˇlc_ˇche_Æignmít
(
£˘‹_t
 
bio_£˘‹
)

170  
	`div_u64
(
bio_£˘‹
, 1 << 3) * (1 << 3);

171 
	}
}

181 
	$wake_up_a˘ive_wq
(
waô_queue_hód_t
 *
wq
)

183 i‡(
	`u∆ikñy
(
	`waôqueue_a˘ive
(
wq
)))

184 
	`wake_up
(
wq
);

185 
	}
}

189 
u8
 
	$cou¡_dúty_ˇches_ªmaöed
(
£gmít_hódî
 *
£g
)

191 
u8
 
i
, 
cou¡
 = 0;

192 
mëablock
 *
mb
;

193 
i
 = 0; i < 
£g
->
Àngth
; i++) {

194 
mb
 = 
£g
->
mb_¨øy
 + 
i
;

195 i‡(
mb
->
dútöess
.
is_dúty
)

196 
cou¡
++;

198  
cou¡
;

199 
	}
}

201 
	$öc_ƒ_dúty_ˇches
(
wb_devi˚
 *
wb
)

203 
	`ASSERT
(
wb
);

204 
	`©omic64_öc
(&
wb
->
ƒ_dúty_ˇches
);

205 
	}
}

207 
	$dec_ƒ_dúty_ˇches
(
wb_devi˚
 *
wb
)

209 
	`ASSERT
(
wb
);

210 i‡(
	`©omic64_dec_™d_ã°
(&
wb
->
ƒ_dúty_ˇches
))

211 
	`wake_up_öãºu±ibÀ
(&
wb
->
waô_dr›_ˇches
);

212 
	}
}

214 
boﬁ
 
	$èöt_mb
(
wb_devi˚
 *
wb
, 
mëablock
 *
mb
, 
u8
 
d©a_bôs
)

216 
Êags
;

217 
boﬁ
 
Êù≥d
 = 
Ál£
;

219 
	`ASSERT
(
d©a_bôs
 > 0);

220 
	`•ö_lock_úqßve
(&
wb
->
mb_lock
, 
Êags
);

222 i‡(!
mb
->
dútöess
.
is_dúty
) {

223 
mb
->
dútöess
.
is_dúty
 = 
åue
;

224 
Êù≥d
 = 
åue
;

226 
mb
->
dútöess
.
d©a_bôs
 |= data_bits;

227 
	`•ö_u∆ock_úqª°‹e
(&
wb
->
mb_lock
, 
Êags
);

229  
Êù≥d
;

230 
	}
}

232 
boﬁ
 
	$m¨k_˛ón_mb
(
wb_devi˚
 *
wb
, 
mëablock
 *
mb
)

234 
Êags
;

235 
boﬁ
 
Êù≥d
 = 
Ál£
;

237 
	`•ö_lock_úqßve
(&
wb
->
mb_lock
, 
Êags
);

238 i‡(
mb
->
dútöess
.
is_dúty
) {

239 
mb
->
dútöess
.
is_dúty
 = 
Ál£
;

240 
Êù≥d
 = 
åue
;

242 
	`•ö_u∆ock_úqª°‹e
(&
wb
->
mb_lock
, 
Êags
);

244  
Êù≥d
;

245 
	}
}

250 
dútöess
 
	$ªad_mb_dútöess
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
,

251 
mëablock
 *
mb
)

253 
Êags
;

254 
dútöess
 
ªtvÆ
;

256 
	`•ö_lock_úqßve
(&
wb
->
mb_lock
, 
Êags
);

257 
ªtvÆ
 = 
mb
->
dútöess
;

258 
	`•ö_u∆ock_úqª°‹e
(&
wb
->
mb_lock
, 
Êags
);

260  
ªtvÆ
;

261 
	}
}

265 
	$curs‹_öô
(
wb_devi˚
 *
wb
)

267 
wb
->
curs‹
 = wb->
cuºít_£g
->
°¨t_idx
;

268 
wb
->
cuºít_£g
->
Àngth
 = 0;

269 
	}
}

275 
u32
 
	$adv™˚_curs‹
(
wb_devi˚
 *
wb
)

277 
u32
 
ﬁd
;

279 i‡(
wb
->
curs‹
 =wb->
ƒ_ˇches
)

280 
wb
->
curs‹
 = 0;

282 
ﬁd
 = 
wb
->
curs‹
;

283 
wb
->
curs‹
++;

284 
wb
->
cuºít_£g
->
Àngth
++;

285 
	`BUG_ON
(
wb
->
cuºít_£g
->
Àngth
 > wb->
ƒ_ˇches_ö£g
);

286 
	`©omic_öc
(&
wb
->
cuºít_£g
->
ƒ_öÊight_ios
);

287  
ﬁd
;

288 
	}
}

290 
boﬁ
 
	$√eds_queue_£g
(
wb_devi˚
 *
wb
)

292 
boﬁ
 
ømbuf_no_•a˚
 = !
	`mb_idx_ö£g
(
wb
, wb->
curs‹
);

294  
ømbuf_no_•a˚
;

295 
	}
}

299 
	$c›y_b¨rõr_ªque°s
(
ømbuf„r
 *
ømbuf
, 
wb_devi˚
 *
wb
)

301 
	`bio_li°_öô
(&
ømbuf
->
b¨rõr_ios
);

302 
	`bio_li°_mîge
(&
ømbuf
->
b¨rõr_ios
, &
wb
->barrier_ios);

303 
	`bio_li°_öô
(&
wb
->
b¨rõr_ios
);

304 
	}
}

306 
	$¥ï¨e_ømbuf„r
(
ømbuf„r
 *
ømbuf
,

307 
wb_devi˚
 *
wb
,

308 
£gmít_hódî
 *
£g
)

310 
ømbuf
->
£g
 = seg;

311 
	`¥ï¨e_£gmít_hódî_devi˚
(
ømbuf
->
d©a
, 
wb
, 
£g
);

312 
	`c›y_b¨rõr_ªque°s
(
ømbuf
, 
wb
);

313 
	}
}

315 
	$öô_ømbuf„r
(
wb_devi˚
 *
wb
)

317 
	`mem£t
(
wb
->
cuºít_ømbuf
->
d©a
, 0, 1 << 12);

318 
	}
}

323 
	$__acquúe_√w_ømbuf„r
(
wb_devi˚
 *
wb
, 
u64
 
id
)

325 
	`waô_f‹_Êushög
(
wb
, 
	`SUB_ID
(
id
, 
NR_RAMBUF_POOL
));

327 
wb
->
cuºít_ømbuf
 = 
	`gë_ømbuf„r_by_id
(wb, 
id
);

329 
	`öô_ømbuf„r
(
wb
);

330 
	}
}

332 
	$__acquúe_√w_£g
(
wb_devi˚
 *
wb
, 
u64
 
id
)

334 
£gmít_hódî
 *
√w_£g
 = 
	`gë_£gmít_hódî_by_id
(
wb
, 
id
);

340 
	`waô_evít
(
wb
->
öÊight_ios_wq
,

341 !
	`©omic_ªad
(&
√w_£g
->
ƒ_öÊight_ios
));

343 
	`waô_f‹_wrôeback
(
wb
, 
	`SUB_ID
(
id
, wb->
ƒ_£gmíts
));

344 i‡(
	`cou¡_dúty_ˇches_ªmaöed
(
√w_£g
)) {

345 
	`DMERR
("%u dirty cachesÑemained. id:%llu",

346 
	`cou¡_dúty_ˇches_ªmaöed
(
√w_£g
), 
id
);

347 
	`BUG
();

349 
	`disˇrd_ˇches_ö£g
(
wb
, 
√w_£g
);

355 
√w_£g
->
id
 = id;

356 
wb
->
cuºít_£g
 = 
√w_£g
;

357 
	}
}

364 
	$acquúe_√w_£g
(
wb_devi˚
 *
wb
, 
u64
 
id
)

366 
	`__acquúe_√w_ømbuf„r
(
wb
, 
id
);

367 
	`__acquúe_√w_£g
(
wb
, 
id
);

368 
	}
}

370 
	$¥ï¨e_√w_£g
(
wb_devi˚
 *
wb
)

372 
u64
 
√xt_id
 = 
wb
->
cuºít_£g
->
id
 + 1;

373 
	`acquúe_√w_£g
(
wb
, 
√xt_id
);

374 
	`curs‹_öô
(
wb
);

375 
	}
}

379 
	$queue_Êush_job
(
wb_devi˚
 *
wb
)

381 
	`waô_evít
(
wb
->
öÊight_ios_wq
, !
	`©omic_ªad
(&wb->
cuºít_£g
->
ƒ_öÊight_ios
));

383 
	`¥ï¨e_ømbuf„r
(
wb
->
cuºít_ømbuf
, wb, wb->
cuºít_£g
);

385 
	`smp_wmb
();

386 
	`©omic64_öc
(&
wb
->
œ°_queued_£gmít_id
);

387 
	`wake_up_¥o˚ss
(
wb
->
Êush_d´m⁄
);

388 
	}
}

390 
	$queue_cuºít_buf„r
(
wb_devi˚
 *
wb
)

392 
	`queue_Êush_job
(
wb
);

393 
	`¥ï¨e_√w_£g
(
wb
);

394 
	}
}

399 
	$might_queue_cuºít_buf„r
(
wb_devi˚
 *
wb
)

402 i‡(
	`√eds_queue_£g
(
wb
)) {

403 
	`upd©e_ƒ_em±y_£gs
(
wb
);

404 
	`queue_cuºít_buf„r
(
wb
);

406 
	}
}

411 
	$Êush_cuºít_buf„r
(
wb_devi˚
 *
wb
)

413 
£gmít_hódî
 *
ﬁd_£g
;

415 
	`muãx_lock
(&
wb
->
io_lock
);

416 
ﬁd_£g
 = 
wb
->
cuºít_£g
;

418 
	`queue_cuºít_buf„r
(
wb
);

419 
	`muãx_u∆ock
(&
wb
->
io_lock
);

421 
	`waô_f‹_Êushög
(
wb
, 
ﬁd_£g
->
id
);

422 
	}
}

426 
	$öc_°©
(
wb_devi˚
 *
wb
,

427 
rw
, 
boﬁ
 
found
, boﬁ 
⁄_buf„r
, boﬁ 
fuŒsize
)

429 
©omic64_t
 *
v
;

431 
i
 = 0;

432 i‡(
rw
)

433 
i
 |(1 << 
STAT_WRITE
);

434 i‡(
found
)

435 
i
 |(1 << 
STAT_HIT
);

436 i‡(
⁄_buf„r
)

437 
i
 |(1 << 
STAT_ON_BUFFER
);

438 i‡(
fuŒsize
)

439 
i
 |(1 << 
STAT_FULLSIZE
);

441 
v
 = &
wb
->
°©
[
i
];

442 
	`©omic64_öc
(
v
);

443 
	}
}

445 
	$˛ór_°©
(
wb_devi˚
 *
wb
)

447 
size_t
 
i
;

448 
i
 = 0; i < 
STATLEN
; i++) {

449 
©omic64_t
 *
v
 = &
wb
->
°©
[
i
];

450 
	`©omic64_£t
(
v
, 0);

452 
	`©omic64_£t
(&
wb
->
cou¡_n⁄_fuŒ_Êushed
, 0);

453 
	}
}

457 #i‡
LINUX_VERSION_CODE
 >
KERNEL_VERSION
(3,14,0)

458 
	#bv_vec
 
bio_vec


	)

459 
	#bv_∑ge
(
vec
Ëvec.
bv_∑ge


	)

460 
	#bv_off£t
(
vec
Ëvec.
bv_off£t


	)

461 
	#bv_Àn
(
vec
Ëvec.
bv_Àn


	)

462 
	#bv_ô
 
bvec_ôî


	)

464 
	#bv_vec
 
bio_vec
 *

	)

465 
	#bv_∑ge
(
vec
Ëvec->
bv_∑ge


	)

466 
	#bv_off£t
(
vec
Ëvec->
bv_off£t


	)

467 
	#bv_Àn
(
vec
Ëvec->
bv_Àn


	)

468 
	#bv_ô
 

	)

476 
	$c›y_bio_∑ylﬂd
(*
buf
, 
bio
 *bio)

478 
size_t
 
sum
 = 0;

479 
bv_vec
 
vec
;

480 
bv_ô
 
ô
;

481 
	`bio_f‹_óch_£gmít
(
vec
, 
bio
, 
ô
) {

482 *
d°
 = 
	`km≠_©omic
(
	`bv_∑ge
(
vec
));

483 
size_t
 
l
 = 
	`bv_Àn
(
vec
);

484 
	`mem˝y
(
buf
, 
d°
 + 
	`bv_off£t
(
vec
), 
l
);

485 
	`kunm≠_©omic
(
d°
);

486 
buf
 +
l
;

487 
sum
 +
l
;

489 
	`ASSERT
(
sum
 =(
	`bio_£˘‹s
(
bio
) << 9));

490 
	}
}

495 
	$__c›y_to_bio_∑ylﬂd
(
bio
 *bio, *
buf
, 
u8
 
i
)

497 
size_t
 
hód
 = 0;

498 
size_t
 
èû
 = 
hód
;

500 
bv_vec
 
vec
;

501 
bv_ô
 
ô
;

502 
	`bio_f‹_óch_£gmít
(
vec
, 
bio
, 
ô
) {

503 
size_t
 
l
 = 
	`bv_Àn
(
vec
);

504 
èû
 +
l
;

505 i‡((
i
 << 9Ë< 
èû
) {

506 *
d°
 = 
	`km≠_©omic
(
	`bv_∑ge
(
vec
));

507 
size_t
 
off£t
 = (
i
 << 9Ë- 
hód
;

508 
	`BUG_ON
((
l
 - 
off£t
) < (1 << 9));

509 
	`mem˝y
(
d°
 + 
	`bv_off£t
(
vec
Ë+ 
off£t
, 
buf
, 1 << 9);

510 
	`kunm≠_©omic
(
d°
);

513 
hód
 +
l
;

515 
	`BUG
();

516 
	}
}

521 
	$c›y_to_bio_∑ylﬂd
(
bio
 *bio, *
buf
, 
u8
 
c›y_bôs
)

523 
u8
 
off£t
 = 
	`bio_ˇlc_off£t
(
bio
);

524 
u8
 
i
;

525 
i
 = 0; i < 
	`bio_£˘‹s
(
bio
); i++) {

526 
u8
 
i_off£t
 = 
i
 + 
off£t
;

527 i‡(
c›y_bôs
 & (1 << 
i_off£t
))

528 
	`__c›y_to_bio_∑ylﬂd
(
bio
, 
buf
 + (
i_off£t
 << 9), 
i
);

530 
	}
}

534 
	slookup_ªsu…
 {

535 
ht_hód
 *
	mhód
;

536 
lookup_key
 
	mkey
;

538 
£gmít_hódî
 *
	mfound_£g
;

539 
mëablock
 *
	mfound_mb
;

541 
boﬁ
 
	mfound
;

542 
boﬁ
 
	m⁄_buf„r
;

549 
	$ˇche_lookup
(
wb_devi˚
 *
wb
, 
bio
 *bio, 
lookup_ªsu…
 *
ªs
)

551 
ªs
->
key
 = (
lookup_key
) {

552 .
£˘‹
 = 
	`ˇlc_ˇche_Æignmít
(
	`bi_£˘‹
(
bio
)),

554 
ªs
->
hód
 = 
	`ht_gë_hód
(
wb
, &ªs->
key
);

556 
ªs
->
found_mb
 = 
	`ht_lookup
(
wb
,Ñes->
hód
, &ªs->
key
);

557 i‡(
ªs
->
found_mb
) {

558 
ªs
->
found_£g
 = 
	`mb_to_£g
(
wb
,Ñes->
found_mb
);

559 
	`©omic_öc
(&
ªs
->
found_£g
->
ƒ_öÊight_ios
);

562 
ªs
->
found
 = (ªs->
found_mb
 !
NULL
);

564 
ªs
->
⁄_buf„r
 = 
Ál£
;

565 i‡(
ªs
->
found
)

566 
ªs
->
⁄_buf„r
 = 
	`is_⁄_buf„r
(
wb
,Ñes->
found_mb
->
idx
);

568 
	`öc_°©
(
wb
, 
	`bio_is_wrôe
(
bio
), 
ªs
->
found
,Ñes->
⁄_buf„r
, 
	`bio_is_fuŒsize
(bio));

569 
	}
}

571 
	$dec_öÊight_ios
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
)

573 i‡(
	`©omic_dec_™d_ã°
(&
£g
->
ƒ_öÊight_ios
))

574 
	`wake_up_a˘ive_wq
(&
wb
->
öÊight_ios_wq
);

575 
	}
}

579 
u8
 
	$to_mask
(
u8
 
off£t
, u8 
cou¡
)

581 
u8
 
i
;

582 
u8
 
ªsu…
 = 0;

583 i‡(
cou¡
 == 8) {

584 
ªsu…
 = 255;

587 
i
 = 0; i < 
cou¡
; i++)

588 
ªsu…
 |(1 << (
i
 + 
off£t
));

590  
ªsu…
;

591 
	}
}

593 
	$fûl_∑ylﬂd_by_backög
(
wb_devi˚
 *
wb
, 
bio
 *bio)

595 
dm_io_ªque°
 
io_ªq
;

596 
dm_io_ªgi⁄
 
ªgi⁄
;

598 
£˘‹_t
 
°¨t
 = 
	`bi_£˘‹
(
bio
);

599 
u8
 
off£t
 = 
	`ˇlc_off£t
(
°¨t
);

600 
u8
 
Àn
 = 
	`bio_£˘‹s
(
bio
);

601 
u8
 
c›y_bôs
 = 
	`to_mask
(
off£t
, 
Àn
);

603 
îr
 = 0;

604 *
buf
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_NOIO
);

605 i‡(!
buf
)

606  -
ENOMEM
;

608 
io_ªq
 = (
dm_io_ªque°
) {

609 
WB_IO_READ
,

610 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

611 .
nŸify
.
‚
 = 
NULL
,

612 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

613 .
mem
.
±r
.
addr
 = 
buf
 + (
off£t
 << 9),

615 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

616 .
bdev
 = 
wb
->
backög_dev
->bdev,

617 .
£˘‹
 = 
°¨t
,

618 .
cou¡
 = 
Àn
,

620 
îr
 = 
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
åue
);

621 i‡(
îr
)

622 
bad
;

624 
	`c›y_to_bio_∑ylﬂd
(
bio
, 
buf
, 
c›y_bôs
);

625 
bad
:

626 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

627  
îr
;

628 
	}
}

634 *
	$ªf_buf„ªd_mb
(
wb_devi˚
 *
wb
, 
mëablock
 *
mb
)

636 
£˘‹_t
 
off£t
 = ((
	`mb_idx_ö£g
(
wb
, 
mb
->
idx
) + 1) << 3);

637  
wb
->
cuºít_ømbuf
->
d©a
 + (
off£t
 << 9);

638 
	}
}

644 *
	$ªad_mb
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
,

645 
mëablock
 *
mb
, 
u8
 
d©a_bôs
)

647 
u8
 
i
;

648 *
ªsu…
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_NOIO
);

649 i‡(!
ªsu…
)

650  
NULL
;

652 
i
 = 0; i < 8; i++) {

653 
îr
 = 0;

654 
dm_io_ªque°
 
io_ªq
;

655 
dm_io_ªgi⁄
 
ªgi⁄
;

657 i‡(!(
d©a_bôs
 & (1 << 
i
)))

660 
io_ªq
 = (
dm_io_ªque°
) {

661 
WB_IO_READ
,

662 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

663 .
nŸify
.
‚
 = 
NULL
,

664 .
mem
.
ty≥
 = 
DM_IO_KMEM
,

665 .
mem
.
±r
.
addr
 = 
ªsu…
 + (
i
 << 9),

668 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

669 .
bdev
 = 
wb
->
ˇche_dev
->bdev,

670 .
£˘‹
 = 
	`ˇlc_mb_°¨t_£˘‹
(
wb
, 
£g
, 
mb
->
idx
Ë+ 
i
,

671 .
cou¡
 = 1,

674 
îr
 = 
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
åue
);

675 i‡(
îr
) {

676 
	`mempoﬁ_‰ì
(
ªsu…
, 
wb
->
buf_8_poﬁ
);

677  
NULL
;

680  
ªsu…
;

681 
	}
}

685 
	ePBD_FLAG
 {

686 
	mPBD_NONE
 = 0,

687 
	mPBD_WILL_CACHE
 = 1,

688 
	mPBD_READ_SEG
 = 2,

691 #i‡(
LINUX_VERSION_CODE
 >
KERNEL_VERSION
(4,6,0Ë|| 
RHEL_RELEASE_CODE
 >
RHEL_RELEASE_VERSION
(7,3))

692 
	#PER_BIO_DATA_SIZE
 
≥r_io_d©a_size


	)

694 
	#PER_BIO_DATA_SIZE
 
≥r_bio_d©a_size


	)

696 
	s≥r_bio_d©a
 {

697 
PBD_FLAG
 
	mty≥
;

699 
u32
 
	m˚Œ_idx
;

700 
£gmít_hódî
 *
	m£g
;

703 
	#≥r_bio_d©a
(
wb
, 
bio
Ë((
≥r_bio_d©a
 *)
	`dm_≥r_bio_d©a
((bio), (wb)->
ti
->
PER_BIO_DATA_SIZE
))

	)

707 
	#ªad_ˇche_˚Œ_‰om_node
(
node
Ë
	`rb_íåy
(“ode), 
ªad_ˇche_˚Œ
, 
rb_node
)

	)

709 
	$ªad_ˇche_add
(
ªad_ˇche_˚Œs
 *
˚Œs
, 
ªad_ˇche_˚Œ
 *
˚Œ
)

711 
rb_node
 **
rbp
, *
∑ª¡
;

712 
rbp
 = &
˚Œs
->
rb_roŸ
.
rb_node
;

713 
∑ª¡
 = 
NULL
;

714 *
rbp
) {

715 
ªad_ˇche_˚Œ
 *
∑ª¡_˚Œ
;

716 
∑ª¡
 = *
rbp
;

717 
∑ª¡_˚Œ
 = 
	`ªad_ˇche_˚Œ_‰om_node
(
∑ª¡
);

718 i‡(
˚Œ
->
£˘‹
 < 
∑ª¡_˚Œ
->sector)

719 
rbp
 = &(*rbp)->
rb_À·
;

721 
rbp
 = &(*rbp)->
rb_right
;

723 
	`rb_lök_node
(&
˚Œ
->
rb_node
, 
∑ª¡
, 
rbp
);

724 
	`rb_ö£π_cﬁ‹
(&
˚Œ
->
rb_node
, &
˚Œs
->
rb_roŸ
);

725 
	}
}

727 
ªad_ˇche_˚Œ
 *
	$lookup_ªad_ˇche_˚Œ
(
wb_devi˚
 *
wb
, 
£˘‹_t
 
£˘‹
)

729 
rb_node
 **
rbp
, *
∑ª¡
;

730 
rbp
 = &
wb
->
ªad_ˇche_˚Œs
->
rb_roŸ
.
rb_node
;

731 
∑ª¡
 = 
NULL
;

732 *
rbp
) {

733 
ªad_ˇche_˚Œ
 *
∑ª¡_˚Œ
;

734 
∑ª¡
 = *
rbp
;

735 
∑ª¡_˚Œ
 = 
	`ªad_ˇche_˚Œ_‰om_node
(
∑ª¡
);

736 i‡(
∑ª¡_˚Œ
->
£˘‹
 == sector)

737  
∑ª¡_˚Œ
;

739 i‡(
£˘‹
 < 
∑ª¡_˚Œ
->sector)

740 
rbp
 = &(*rbp)->
rb_À·
;

742 
rbp
 = &(*rbp)->
rb_right
;

744  
NULL
;

745 
	}
}

747 
	$ªad_ˇche_ˇn˚l_˚Œs
(
ªad_ˇche_˚Œs
 *
˚Œs
, 
u32
 
n
)

749 
u32
 
i
;

750 
u32
 
œ°
 = 
˚Œs
->
curs‹
 + cñls->
£qcou¡
;

751 i‡(
œ°
 > 
˚Œs
->
size
)

752 
œ°
 = 
˚Œs
->
size
;

753 
i
 = 
˚Œs
->
curs‹
; i < 
œ°
; i++) {

754 
ªad_ˇche_˚Œ
 *
˚Œ
 = 
˚Œs
->
¨øy
 + 
i
;

755 
˚Œ
->
ˇn˚Œed
 = 
åue
;

757 
	}
}

763 
	$ªad_ˇche_ˇn˚l_f‹eground
(
ªad_ˇche_˚Œs
 *
˚Œs
,

764 
ªad_ˇche_˚Œ
 *
√w_˚Œ
)

766 i‡(
√w_˚Œ
->
£˘‹
 =(
˚Œs
->
œ°_£˘‹
 + 8))

767 
˚Œs
->
£qcou¡
++;

769 
˚Œs
->
£qcou¡
 = 1;

770 
˚Œs
->
ovî_thªshﬁd
 = 
Ál£
;

773 i‡(
˚Œs
->
£qcou¡
 > cñls->
thªshﬁd
) {

774 i‡(
˚Œs
->
ovî_thªshﬁd
)

775 
√w_˚Œ
->
ˇn˚Œed
 = 
åue
;

777 
˚Œs
->
ovî_thªshﬁd
 = 
åue
;

778 
	`ªad_ˇche_ˇn˚l_˚Œs
(
˚Œs
, cñls->
£qcou¡
);

781 
˚Œs
->
œ°_£˘‹
 = 
√w_˚Œ
->
£˘‹
;

782 
	}
}

784 
boﬁ
 
	$ª£rve_ªad_ˇche_˚Œ
(
wb_devi˚
 *
wb
, 
bio
 *bio)

786 
≥r_bio_d©a
 *
pbd
;

787 
ªad_ˇche_˚Œs
 *
˚Œs
 = 
wb
->read_cache_cells;

788 
ªad_ˇche_˚Œ
 *
found
, *
√w_˚Œ
;

790 
	`ASSERT
(
˚Œs
->
thªshﬁd
 > 0);

792 i‡(!
	`ACCESS_ONCE
(
wb
->
ªad_ˇche_thªshﬁd
))

793  
Ál£
;

795 i‡(!
˚Œs
->
curs‹
)

796  
Ál£
;

803 i‡(!
	`bio_is_fuŒsize
(
bio
))

804  
Ál£
;

810 
found
 = 
	`lookup_ªad_ˇche_˚Œ
(
wb
, 
	`bi_£˘‹
(
bio
));

811 i‡(
found
)

812  
Ál£
;

814 
˚Œs
->
curs‹
--;

815 
√w_˚Œ
 = 
˚Œs
->
¨øy
 + cñls->
curs‹
;

816 
√w_˚Œ
->
£˘‹
 = 
	`bi_£˘‹
(
bio
);

817 
	`ªad_ˇche_add
(
˚Œs
, 
√w_˚Œ
);

819 
pbd
 = 
	`≥r_bio_d©a
(
wb
, 
bio
);

820 
pbd
->
ty≥
 = 
PBD_WILL_CACHE
;

821 
pbd
->
˚Œ_idx
 = 
˚Œs
->
curs‹
;

824 
	`ªad_ˇche_ˇn˚l_f‹eground
(
˚Œs
, 
√w_˚Œ
);

826  
åue
;

827 
	}
}

829 
	$might_ˇn˚l_ªad_ˇche_˚Œ
(
wb_devi˚
 *
wb
, 
bio
 *bio)

831 
ªad_ˇche_˚Œ
 *
found
;

832 
found
 = 
	`lookup_ªad_ˇche_˚Œ
(
wb
, 
	`ˇlc_ˇche_Æignmít
(
	`bi_£˘‹
(
bio
)));

833 i‡(
found
)

834 
found
->
ˇn˚Œed
 = 
åue
;

835 
	}
}

837 
	$ªad_ˇche_˚Œ_c›y_d©a
(
wb_devi˚
 *
wb
, 
bio
 *bio, 
îr‹
)

839 
≥r_bio_d©a
 *
pbd
 = 
	`≥r_bio_d©a
(
wb
, 
bio
);

840 
ªad_ˇche_˚Œs
 *
˚Œs
 = 
wb
->read_cache_cells;

841 
ªad_ˇche_˚Œ
 *
˚Œ
 = 
˚Œs
->
¨øy
 + 
pbd
->
˚Œ_idx
;

843 
	`ASSERT
(
pbd
->
ty≥
 =
PBD_WILL_CACHE
);

846 i‡(
îr‹
)

847 
˚Œ
->
ˇn˚Œed
 = 
åue
;

854 i‡(!
˚Œ
->
ˇn˚Œed
)

855 
	`c›y_bio_∑ylﬂd
(
˚Œ
->
d©a
, 
bio
);

857 i‡(
	`©omic_dec_™d_ã°
(&
˚Œs
->
ack_cou¡
))

858 
	`queue_w‹k
(
˚Œs
->
wq
, &
wb
->
ªad_ˇche_w‹k
);

859 
	}
}

864 
	$öje˘_ªad_ˇche
(
wb_devi˚
 *
wb
, 
ªad_ˇche_˚Œ
 *
˚Œ
)

866 
mëablock
 *
mb
;

867 
u32
 
_mb_idx_ö£g
;

868 
£gmít_hódî
 *
£g
;

870 
lookup_key
 
key
 = {

871 .
£˘‹
 = 
˚Œ
->sector,

873 
ht_hód
 *
hód
 = 
	`ht_gë_hód
(
wb
, &
key
);

875 
	`muãx_lock
(&
wb
->
io_lock
);

880 i‡(
˚Œ
->
ˇn˚Œed
) {

881 
	`muãx_u∆ock
(&
wb
->
io_lock
);

885 
	`might_queue_cuºít_buf„r
(
wb
);

887 
£g
 = 
wb
->
cuºít_£g
;

888 
_mb_idx_ö£g
 = 
	`mb_idx_ö£g
(
wb
, 
	`adv™˚_curs‹
(wb));

895 
	`mem˝y
(
wb
->
cuºít_ømbuf
->
d©a
 + ((
_mb_idx_ö£g
 + 1Ë<< 12), 
˚Œ
->data, 1 << 12);

897 
mb
 = 
£g
->
mb_¨øy
 + 
_mb_idx_ö£g
;

898 
	`ASSERT
(!
mb
->
dútöess
.
is_dúty
);

899 
mb
->
dútöess
.
d©a_bôs
 = 255;

901 
	`ht_ªgi°î
(
wb
, 
hód
, 
mb
, &
key
);

903 
	`muãx_u∆ock
(&
wb
->
io_lock
);

905 
	`dec_öÊight_ios
(
wb
, 
£g
);

906 
	}
}

908 
	$‰ì_ªad_ˇche_˚Œ_d©a
(
ªad_ˇche_˚Œs
 *
˚Œs
)

910 
u32
 
i
;

911 
i
 = 0; i < 
˚Œs
->
size
; i++) {

912 
ªad_ˇche_˚Œ
 *
˚Œ
 = 
˚Œs
->
¨øy
 + 
i
;

913 
	`v‰ì
(
˚Œ
->
d©a
);

915 
	}
}

917 
ªad_ˇche_˚Œs
 *
	$Æloc_ªad_ˇche_˚Œs
(
wb_devi˚
 *
wb
, 
u32
 
n
)

919 
ªad_ˇche_˚Œs
 *
˚Œs
;

920 
u32
 
i
;

921 
˚Œs
 = 
	`kmÆloc
((
ªad_ˇche_˚Œs
), 
GFP_KERNEL
);

922 i‡(!
˚Œs
)

923  
NULL
;

925 
˚Œs
->
size
 = 
n
;

926 
˚Œs
->
thªshﬁd
 = 
UINT_MAX
;

927 
˚Œs
->
œ°_£˘‹
 = ~0;

928 
˚Œs
->
£qcou¡
 = 0;

929 
˚Œs
->
ovî_thªshﬁd
 = 
Ál£
;

930 
˚Œs
->
¨øy
 = 
	`kmÆloc
((
ªad_ˇche_˚Œ
Ë* 
n
, 
GFP_KERNEL
);

931 i‡(!
˚Œs
->
¨øy
)

932 
bad_˚Œs_¨øy
;

934 
i
 = 0; i < 
˚Œs
->
size
; i++) {

935 
ªad_ˇche_˚Œ
 *
˚Œ
 = 
˚Œs
->
¨øy
 + 
i
;

936 
˚Œ
->
d©a
 = 
	`vmÆloc
(1 << 12);

937 i‡(!
˚Œ
->
d©a
) {

938 
u32
 
j
;

939 
j
 = 0; j < 
i
; j++) {

940 
˚Œ
 = 
˚Œs
->
¨øy
 + 
j
;

941 
	`v‰ì
(
˚Œ
->
d©a
);

943 
bad_˚Œ_d©a
;

947 
˚Œs
->
wq
 = 
	`¸óã_sögÀthªad_w‹kqueue
("dmwb_read_cache");

948 i‡(!
˚Œs
->
wq
)

949 
bad_wq
;

951  
˚Œs
;

953 
bad_wq
:

954 
	`‰ì_ªad_ˇche_˚Œ_d©a
(
˚Œs
);

955 
bad_˚Œ_d©a
:

956 
	`k‰ì
(
˚Œs
->
¨øy
);

957 
bad_˚Œs_¨øy
:

958 
	`k‰ì
(
˚Œs
);

959  
NULL
;

960 
	}
}

962 
	$‰ì_ªad_ˇche_˚Œs
(
wb_devi˚
 *
wb
)

964 
ªad_ˇche_˚Œs
 *
˚Œs
 = 
wb
->read_cache_cells;

965 
	`de°roy_w‹kqueue
(
˚Œs
->
wq
);

966 
	`‰ì_ªad_ˇche_˚Œ_d©a
(
˚Œs
);

967 
	`k‰ì
(
˚Œs
->
¨øy
);

968 
	`k‰ì
(
˚Œs
);

969 
	}
}

971 
	$ªöô_ªad_ˇche_˚Œs
(
wb_devi˚
 *
wb
)

973 
ªad_ˇche_˚Œs
 *
˚Œs
 = 
wb
->read_cache_cells;

974 
u32
 
i
, 
cur_thªshﬁd
;

976 
	`muãx_lock
(&
wb
->
io_lock
);

977 
˚Œs
->
rb_roŸ
 = 
RB_ROOT
;

978 
˚Œs
->
curs‹
 = cñls->
size
;

979 
	`©omic_£t
(&
˚Œs
->
ack_cou¡
, cñls->
size
);

980 
i
 = 0; i < 
˚Œs
->
size
; i++) {

981 
ªad_ˇche_˚Œ
 *
˚Œ
 = 
˚Œs
->
¨øy
 + 
i
;

982 
˚Œ
->
ˇn˚Œed
 = 
Ál£
;

984 
cur_thªshﬁd
 = 
	`ACCESS_ONCE
(
wb
->
ªad_ˇche_thªshﬁd
);

985 i‡(
cur_thªshﬁd
 && (cur_thªshﬁd !
˚Œs
->
thªshﬁd
)) {

986 
˚Œs
->
thªshﬁd
 = 
cur_thªshﬁd
;

987 
˚Œs
->
ovî_thªshﬁd
 = 
Ál£
;

989 
	`muãx_u∆ock
(&
wb
->
io_lock
);

990 
	}
}

995 
	$visô_™d_ˇn˚l_˚Œs
(
rb_node
 *
fú°
, rb_nodê*
œ°
)

997 
rb_node
 *
rbp
 = 
fú°
;

998 
rbp
 !
œ°
) {

999 
ªad_ˇche_˚Œ
 *
˚Œ
 = 
	`ªad_ˇche_˚Œ_‰om_node
(
rbp
);

1000 
˚Œ
->
ˇn˚Œed
 = 
åue
;

1001 
rbp
 = 
	`rb_√xt
(rbp);

1003 
	}
}

1008 
	$ªad_ˇche_ˇn˚l_background
(
ªad_ˇche_˚Œs
 *
˚Œs
)

1010 
rb_node
 *
rbp
 = 
	`rb_fú°
(&
˚Œs
->
rb_roŸ
);

1011 
rb_node
 *
£qhód
 = 
rbp
;

1012 
£˘‹_t
 
œ°_£˘‹
 = ~0;

1013 
u32
 
£qcou¡
 = 0;

1015 
rbp
) {

1016 
ªad_ˇche_˚Œ
 *
˚Œ
 = 
	`ªad_ˇche_˚Œ_‰om_node
(
rbp
);

1017 i‡(
˚Œ
->
£˘‹
 =(
œ°_£˘‹
 + 8))

1018 
£qcou¡
++;

1020 i‡(
£qcou¡
 > 
˚Œs
->
thªshﬁd
)

1021 
	`visô_™d_ˇn˚l_˚Œs
(
£qhód
, 
rbp
);

1022 
£qcou¡
 = 1;

1023 
£qhód
 = 
rbp
;

1025 
œ°_£˘‹
 = 
˚Œ
->
£˘‹
;

1026 
rbp
 = 
	`rb_√xt
(rbp);

1028 i‡(
£qcou¡
 > 
˚Œs
->
thªshﬁd
)

1029 
	`visô_™d_ˇn˚l_˚Œs
(
£qhód
, 
rbp
);

1030 
	}
}

1032 
	$ªad_ˇche_¥oc
(
w‹k_°ru˘
 *
w‹k
)

1034 
wb_devi˚
 *
wb
 = 
	`c⁄èöî_of
(
w‹k
, wb_devi˚, 
ªad_ˇche_w‹k
);

1035 
ªad_ˇche_˚Œs
 *
˚Œs
 = 
wb
->read_cache_cells;

1036 
u32
 
i
;

1038 
	`ªad_ˇche_ˇn˚l_background
(
˚Œs
);

1040 
i
 = 0; i < 
˚Œs
->
size
; i++) {

1041 
ªad_ˇche_˚Œ
 *
˚Œ
 = 
˚Œs
->
¨øy
 + 
i
;

1042 
	`öje˘_ªad_ˇche
(
wb
, 
˚Œ
);

1045 
	`ªöô_ªad_ˇche_˚Œs
(
wb
);

1046 
	}
}

1048 
	$öô_ªad_ˇche_˚Œs
(
wb_devi˚
 *
wb
)

1050 
ªad_ˇche_˚Œs
 *
˚Œs
;

1051 
	`INIT_WORK
(&
wb
->
ªad_ˇche_w‹k
, 
ªad_ˇche_¥oc
);

1052 
˚Œs
 = 
	`Æloc_ªad_ˇche_˚Œs
(
wb
, wb->
ƒ_ªad_ˇche_˚Œs
);

1053 i‡(!
˚Œs
)

1054  -
ENOMEM
;

1055 
wb
->
ªad_ˇche_˚Œs
 = 
˚Œs
;

1056 
	`ªöô_ªad_ˇche_˚Œs
(
wb
);

1058 
	}
}

1062 
	$öôülize_wrôe_io
(
wrôe_io
 *
wio
, 
bio
 *bio)

1064 
u8
 
off£t
 = 
	`bio_ˇlc_off£t
(
bio
);

1065 
£˘‹_t
 
cou¡
 = 
	`bio_£˘‹s
(
bio
);

1073 
	`c›y_bio_∑ylﬂd
(
wio
->
d©a
 + (
off£t
 << 9), 
bio
);

1076 
wio
->
d©a_bôs
 = 
	`to_mask
(
off£t
, 
cou¡
);

1077 
	}
}

1079 
	$mem˝y_masked
(*
to
, 
u8
 
¥Ÿe˘_bôs
, *
‰om
, u8 
c›y_bôs
)

1081 
u8
 
i
;

1082 
i
 = 0; i < 8; i++) {

1083 
boﬁ
 
wûl_c›y
 = 
c›y_bôs
 & (1 << 
i
);

1084 
boﬁ
 
¥Ÿe˘ed
 = 
¥Ÿe˘_bôs
 & (1 << 
i
);

1085 i‡(
wûl_c›y
 && (!
¥Ÿe˘ed
)) {

1086 
size_t
 
off£t
 = (
i
 << 9);

1087 
	`mem˝y
(
to
 + 
off£t
, 
‰om
 + offset, 1 << 9);

1090 
	}
}

1092 
	$¥ï¨e_ovîwrôe
(
wb_devi˚
 *
wb
, 
£gmít_hódî
 *
£g
, 
mëablock
 *
ﬁd_mb
, 
wrôe_io
* 
wio
, 
u8
 
ovîwrôe_bôs
)

1094 
dútöess
 dútöes†
	`ªad_mb_dútöess
(
wb
, 
£g
, 
ﬁd_mb
);

1096 
boﬁ
 
√eds_mîge_¥ev_ˇche
 = !(
ovîwrôe_bôs
 =255Ë|| !(
dútöess
.
d©a_bôs
 == 255);

1098 i‡(!
dútöess
.
is_dúty
)

1099 
√eds_mîge_¥ev_ˇche
 = 
Ál£
;

1101 i‡(
ovîwrôe_bôs
 == 255)

1102 
√eds_mîge_¥ev_ˇche
 = 
Ál£
;

1104 i‡(
	`u∆ikñy
(
√eds_mîge_¥ev_ˇche
)) {

1105 *
buf
;

1107 
	`waô_f‹_Êushög
(
wb
, 
£g
->
id
);

1108 
	`ASSERT
(
dútöess
.
is_dúty
);

1110 
buf
 = 
	`ªad_mb
(
wb
, 
£g
, 
ﬁd_mb
, 
dútöess
.
d©a_bôs
);

1111 i‡(!
buf
)

1112  -
EIO
;

1115 
	`mem˝y_masked
(
wio
->
d©a
, wio->
d©a_bôs
, 
buf
, 
dútöess
.data_bits);

1116 
wio
->
d©a_bôs
 |
dútöess
.data_bits;

1117 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

1120 i‡(
	`m¨k_˛ón_mb
(
wb
, 
ﬁd_mb
))

1121 
	`dec_ƒ_dúty_ˇches
(
wb
);

1123 
	`ht_dñ
(
wb
, 
ﬁd_mb
);

1126 
	}
}

1131 
mëablock
 *
	$¥ï¨e_√w_wrôe_pos
(
wb_devi˚
 *
wb
)

1133 
mëablock
 *
ªt
 = 
wb
->
cuºít_£g
->
mb_¨øy
 + 
	`mb_idx_ö£g
(wb, 
	`adv™˚_curs‹
(wb));

1134 
	`ASSERT
(!
ªt
->
dútöess
.
is_dúty
);

1135 
ªt
->
dútöess
.
d©a_bôs
 = 0;

1136  
ªt
;

1137 
	}
}

1139 
	$wrôe_⁄_ømbuf„r
(
wb_devi˚
 *
wb
, 
mëablock
 *
wrôe_pos
, 
wrôe_io
 *
wio
)

1141 
size_t
 
mb_off£t
 = (
	`mb_idx_ö£g
(
wb
, 
wrôe_pos
->
idx
) + 1) << 12;

1142 *
mb_d©a
 = 
wb
->
cuºít_ømbuf
->
d©a
 + 
mb_off£t
;

1143 i‡(
wio
->
d©a_bôs
 == 255)

1144 
	`mem˝y
(
mb_d©a
, 
wio
->
d©a
, 1 << 12);

1146 
	`mem˝y_masked
(
mb_d©a
, 0, 
wio
->
d©a
, wio->
d©a_bôs
);

1147 
	}
}

1149 
	$do_¥o˚ss_wrôe
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1151 
îr
 = 0;

1153 
mëablock
 *
wrôe_pos
 = 
NULL
;

1154 
lookup_ªsu…
 
ªs
;

1156 
wrôe_io
 
wio
;

1157 
wio
.
d©a
 = 
	`mempoﬁ_Æloc
(
wb
->
buf_8_poﬁ
, 
GFP_NOIO
);

1158 i‡(!
wio
.
d©a
)

1159  -
ENOMEM
;

1161 
	`öôülize_wrôe_io
(&
wio
, 
bio
);

1163 
	`muãx_lock
(&
wb
->
io_lock
);

1165 
	`ˇche_lookup
(
wb
, 
bio
, &
ªs
);

1167 i‡(
ªs
.
found
) {

1168 i‡(
	`u∆ikñy
(
ªs
.
⁄_buf„r
)) {

1170 
wrôe_pos
 = 
ªs
.
found_mb
;

1171 
do_wrôe
;

1173 
îr
 = 
	`¥ï¨e_ovîwrôe
(
wb
, 
ªs
.
found_£g
,Ñes.
found_mb
, &
wio
, wio.
d©a_bôs
);

1174 
	`dec_öÊight_ios
(
wb
, 
ªs
.
found_£g
);

1175 i‡(
îr
)

1176 
out
;

1179 
	`might_ˇn˚l_ªad_ˇche_˚Œ
(
wb
, 
bio
);

1181 
	`might_queue_cuºít_buf„r
(
wb
);

1183 
wrôe_pos
 = 
	`¥ï¨e_√w_wrôe_pos
(
wb
);

1185 
do_wrôe
:

1186 
	`ASSERT
(
wrôe_pos
);

1187 
	`wrôe_⁄_ømbuf„r
(
wb
, 
wrôe_pos
, &
wio
);

1189 i‡(
	`èöt_mb
(
wb
, 
wrôe_pos
, 
wio
.
d©a_bôs
))

1190 
	`öc_ƒ_dúty_ˇches
(
wb
);

1192 
	`ht_ªgi°î
(
wb
, 
ªs
.
hód
, 
wrôe_pos
, &ªs.
key
);

1194 
out
:

1195 
	`muãx_u∆ock
(&
wb
->
io_lock
);

1196 
	`mempoﬁ_‰ì
(
wio
.
d©a
, 
wb
->
buf_8_poﬁ
);

1197  
îr
;

1198 
	}
}

1200 
	$com∂ëe_¥o˚ss_wrôe
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1202 
	`dec_öÊight_ios
(
wb
, wb->
cuºít_£g
);

1208 i‡(
	`bio_is_fua
(
bio
)) {

1209 
	`queue_b¨rõr_io
(
wb
, 
bio
);

1210  
DM_MAPIO_SUBMITTED
;

1213 
	`bio_io_suc˚ss_com∑t
(
bio
);

1214  
DM_MAPIO_SUBMITTED
;

1215 
	}
}

1248 
	$¥o˚ss_wrôe_wb
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1251 
îr
 = 
	`do_¥o˚ss_wrôe
(
wb
, 
bio
);

1252 i‡(
îr
) {

1253 
	`bio_io_îr‹
(
bio
);

1254  
DM_MAPIO_SUBMITTED
;

1256  
	`com∂ëe_¥o˚ss_wrôe
(
wb
, 
bio
);

1257 
	}
}

1259 
	$¥o˚ss_wrôe_wa
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1261 
lookup_ªsu…
 
ªs
;

1263 
	`muãx_lock
(&
wb
->
io_lock
);

1264 
	`ˇche_lookup
(
wb
, 
bio
, &
ªs
);

1265 i‡(
ªs
.
found
) {

1266 
	`dec_öÊight_ios
(
wb
, 
ªs
.
found_£g
);

1267 
	`ht_dñ
(
wb
, 
ªs
.
found_mb
);

1270 
	`might_ˇn˚l_ªad_ˇche_˚Œ
(
wb
, 
bio
);

1271 
	`muãx_u∆ock
(&
wb
->
io_lock
);

1273 
	`bio_ªm≠
(
bio
, 
wb
->
backög_dev
, 
	`bi_£˘‹
(bio));

1274  
DM_MAPIO_REMAPPED
;

1275 
	}
}

1284 
	$¥o˚ss_wrôe
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1289  
wb
->
wrôe_¨ound_mode
 ? 
	`¥o˚ss_wrôe_wa
(wb, 
bio
Ë: 
	`¥o˚ss_wrôe_wb
(wb, bio);

1290 
	}
}

1292 
	sªad_backög_async_c⁄ãxt
 {

1293 
wb_devi˚
 *
	mwb
;

1294 
bio
 *
	mbio
;

1297 
	$ªad_backög_async_ˇŒback_⁄°ack
(
îr‹
, 
ªad_backög_async_c⁄ãxt
 *
˘x
)

1299 
	`ASSERT
(
	`bio_is_fuŒsize
(
˘x
->
bio
));

1301 
	`ªad_ˇche_˚Œ_c›y_d©a
(
˘x
->
wb
, ctx->
bio
, 
îr‹
);

1303 i‡(
îr‹
)

1304 
	`bio_io_îr‹
(
˘x
->
bio
);

1306 
	`bio_io_suc˚ss_com∑t
(
˘x
->
bio
);

1307 
	}
}

1309 
	$ªad_backög_async_ˇŒback
(
îr‹
, *
c⁄ãxt
)

1311 
ªad_backög_async_c⁄ãxt
 *
˘x
 = 
c⁄ãxt
;

1312 
	`ªad_backög_async_ˇŒback_⁄°ack
(
îr‹
, 
˘x
);

1313 
	`k‰ì
(
˘x
);

1314 
	}
}

1316 
	$ªad_backög_async
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1318 
îr
 = 0;

1320 
dm_io_ªque°
 
io_ªq
;

1321 
dm_io_ªgi⁄
 
ªgi⁄
;

1323 
ªad_backög_async_c⁄ãxt
 *
˘x
 = 
	`kmÆloc
((ªad_backög_async_c⁄ãxt), 
GFP_NOIO
);

1324 i‡(!
˘x
)

1325  -
ENOMEM
;

1327 
˘x
->
wb
 = wb;

1328 
˘x
->
bio
 = bio;

1330 
	`ASSERT
(
	`bio_is_fuŒsize
(
bio
));

1332 
io_ªq
 = (
dm_io_ªque°
) {

1333 
WB_IO_READ
,

1334 .
˛õ¡
 = 
wb
->
io_˛õ¡
,

1335 #i‡
LINUX_VERSION_CODE
 >
	`KERNEL_VERSION
(3,14,0)

1336 .
mem
.
ty≥
 = 
DM_IO_BIO
,

1337 .
mem
.
±r
.
bio
 = bio,

1339 .
mem
.
ty≥
 = 
DM_IO_BVEC
,

1340 .
mem
.
±r
.
bvec
 = 
bio
->
bi_io_vec
 + bio->
bi_idx
,

1342 .
nŸify
.
‚
 = 
ªad_backög_async_ˇŒback
,

1343 .
nŸify
.
c⁄ãxt
 = 
˘x


1345 
ªgi⁄
 = (
dm_io_ªgi⁄
) {

1346 .
bdev
 = 
wb
->
backög_dev
->bdev,

1347 .
£˘‹
 = 
	`bi_£˘‹
(
bio
),

1348 .
cou¡
 = 8

1351 
îr
 = 
	`wb_io
(&
io_ªq
, 1, &
ªgi⁄
, 
NULL
, 
Ál£
);

1352 i‡(
îr
)

1353 
	`k‰ì
(
˘x
);

1355  
îr
;

1356 
	}
}

1358 
	$¥o˚ss_ªad
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1360 
lookup_ªsu…
 
ªs
;

1361 
dútöess
 dirtiness;

1362 
≥r_bio_d©a
 *
pbd
;

1364 
boﬁ
 
ª£rved
 = 
Ál£
;

1366 
	`muãx_lock
(&
wb
->
io_lock
);

1367 
	`ˇche_lookup
(
wb
, 
bio
, &
ªs
);

1368 i‡(!
ªs
.
found
)

1369 
ª£rved
 = 
	`ª£rve_ªad_ˇche_˚Œ
(
wb
, 
bio
);

1370 
	`muãx_u∆ock
(&
wb
->
io_lock
);

1372 i‡(!
ªs
.
found
) {

1373 i‡(
ª£rved
) {

1380 i‡(
	`ªad_backög_async
(
wb
, 
bio
)) {

1381 
ªad_backög_async_c⁄ãxt
 
˘x
 = {

1382 .
wb
 = wb,

1383 .
bio
 = bio

1385 
	`ªad_backög_async_ˇŒback_⁄°ack
(1, &
˘x
);

1387  
DM_MAPIO_SUBMITTED
;

1389 
	`bio_ªm≠
(
bio
, 
wb
->
backög_dev
, 
	`bi_£˘‹
(bio));

1390  
DM_MAPIO_REMAPPED
;

1394 
dútöess
 = 
	`ªad_mb_dútöess
(
wb
, 
ªs
.
found_£g
,Ñes.
found_mb
);

1395 i‡(
	`u∆ikñy
(
ªs
.
⁄_buf„r
)) {

1396 
îr
 = 
	`fûl_∑ylﬂd_by_backög
(
wb
, 
bio
);

1397 i‡(
îr
)

1398 
ªad_buf„ªd_mb_exô
;

1400 i‡(
dútöess
.
is_dúty
)

1401 
	`c›y_to_bio_∑ylﬂd
(
bio
, 
	`ªf_buf„ªd_mb
(
wb
, 
ªs
.
found_mb
), 
dútöess
.
d©a_bôs
);

1403 
ªad_buf„ªd_mb_exô
:

1404 
	`dec_öÊight_ios
(
wb
, 
ªs
.
found_£g
);

1406 i‡(
	`u∆ikñy
(
îr
))

1407 
	`bio_io_îr‹
(
bio
);

1409 
	`bio_io_suc˚ss_com∑t
(
bio
);

1411  
DM_MAPIO_SUBMITTED
;

1418 
	`waô_f‹_Êushög
(
wb
, 
ªs
.
found_£g
->
id
);

1420 i‡(
	`u∆ikñy
(
dútöess
.
d©a_bôs
 != 255)) {

1421 
îr
 = 
	`fûl_∑ylﬂd_by_backög
(
wb
, 
bio
);

1422 i‡(
îr
)

1423 
ªad_mb_exô
;

1425 i‡(
dútöess
.
is_dúty
) {

1426 *
buf
 = 
	`ªad_mb
(
wb
, 
ªs
.
found_£g
,Ñes.
found_mb
, 
dútöess
.
d©a_bôs
);

1427 i‡(!
buf
) {

1428 
îr
 = -
EIO
;

1429 
ªad_mb_exô
;

1431 
	`c›y_to_bio_∑ylﬂd
(
bio
, 
buf
, 
dútöess
.
d©a_bôs
);

1432 
	`mempoﬁ_‰ì
(
buf
, 
wb
->
buf_8_poﬁ
);

1435 
ªad_mb_exô
:

1436 
	`dec_öÊight_ios
(
wb
, 
ªs
.
found_£g
);

1438 i‡(
	`u∆ikñy
(
îr
))

1439 
	`bio_io_îr‹
(
bio
);

1441 
	`bio_io_suc˚ss_com∑t
(
bio
);

1443  
DM_MAPIO_SUBMITTED
;

1446 
pbd
 = 
	`≥r_bio_d©a
(
wb
, 
bio
);

1447 
pbd
->
ty≥
 = 
PBD_READ_SEG
;

1448 
pbd
->
£g
 = 
ªs
.
found_£g
;

1450 
	`bio_ªm≠
(
bio
, 
wb
->
ˇche_dev
,

1451 
	`ˇlc_mb_°¨t_£˘‹
(
wb
, 
ªs
.
found_£g
,Ñes.
found_mb
->
idx
) +

1452 
	`bio_ˇlc_off£t
(
bio
));

1454  
DM_MAPIO_REMAPPED
;

1455 
	}
}

1457 
	$¥o˚ss_bio
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1459  
	`bio_is_wrôe
(
bio
Ë? 
	`¥o˚ss_wrôe
(
wb
, bioË: 
	`¥o˚ss_ªad
(wb, bio);

1460 
	}
}

1462 
	$¥o˚ss_b¨rõr_bio
(
wb_devi˚
 *
wb
, 
bio
 *bio)

1465 
	`ASSERT
(
	`bio_£˘‹s
(
bio
) == 0);

1466 
	`queue_b¨rõr_io
(
wb
, 
bio
);

1467  
DM_MAPIO_SUBMITTED
;

1468 
	}
}

1470 
	$wrôeboo°_m≠
(
dm_èrgë
 *
ti
, 
bio
 *bio)

1472 
wb_devi˚
 *
wb
 = 
ti
->
¥iv©e
;

1474 
≥r_bio_d©a
 *
pbd
 = 
	`≥r_bio_d©a
(
wb
, 
bio
);

1475 
pbd
->
ty≥
 = 
PBD_NONE
;

1477 i‡(
	`bio_is_b¨rõr
(
bio
))

1478  
	`¥o˚ss_b¨rõr_bio
(
wb
, 
bio
);

1480  
	`¥o˚ss_bio
(
wb
, 
bio
);

1481 
	}
}

1489 #i‡
LINUX_VERSION_CODE
 >
KERNEL_VERSION
(4,13,0)

1490 
	#DM_ENDIO_DONE_COMPAT
 
DM_ENDIO_DONE


	)

1491 
	$wrôeboo°_íd_io
(
dm_èrgë
 *
ti
, 
bio
 *bio, 
blk_°©us_t
 *
îr‹
)

1493 
	#DM_ENDIO_DONE_COMPAT
 0

	)

1494 
	$wrôeboo°_íd_io
(
dm_èrgë
 *
ti
, 
bio
 *bio, 
îr‹
)

1497 
wb_devi˚
 *
wb
 = 
ti
->
¥iv©e
;

1498 
≥r_bio_d©a
 *
pbd
 = 
	`≥r_bio_d©a
(
wb
, 
bio
);

1500 
pbd
->
ty≥
) {

1501 
PBD_NONE
:

1502 
PBD_WILL_CACHE
:

1503  
DM_ENDIO_DONE_COMPAT
;

1504 
PBD_READ_SEG
:

1505 
	`dec_öÊight_ios
(
wb
, 
pbd
->
£g
);

1506  
DM_ENDIO_DONE_COMPAT
;

1508 
	`BUG
();

1510 
	}
}

1512 
	$c⁄sume_es£¡ül_¨gv
(
wb_devi˚
 *
wb
, 
dm_¨g_£t
 *
as
)

1514 
îr
 = 0;

1515 
dm_èrgë
 *
ti
 = 
wb
->ti;

1517 
îr
 = 
	`dm_gë_devi˚
(
ti
, 
	`dm_shi·_¨g
(
as
), 
	`dm_èbÀ_gë_mode
—i->
èbÀ
),

1518 &
wb
->
backög_dev
);

1519 i‡(
îr
) {

1520 
	`DMERR
("FailedÅo get backing_dev");

1521  
îr
;

1524 
îr
 = 
	`dm_gë_devi˚
(
ti
, 
	`dm_shi·_¨g
(
as
), 
	`dm_èbÀ_gë_mode
—i->
èbÀ
),

1525 &
wb
->
ˇche_dev
);

1526 i‡(
îr
) {

1527 
	`DMERR
("FailedÅo get cache_dev");

1528 
bad_gë_ˇche
;

1531  
îr
;

1533 
bad_gë_ˇche
:

1534 
	`dm_put_devi˚
(
ti
, 
wb
->
backög_dev
);

1535  
îr
;

1536 
	}
}

1538 
	#c⁄sume_kv
(
«me
, 
ƒ
, 
is_°©ic
) { \

1539 i‡(!
	`°rˇ£cmp
(
key
, #name)) { \

1540 i‡(!
¨gc
) \

1542 i‡(
	`ã°_bô
(
WB_CREATED
, &
wb
->
Êags
Ë&& 
is_°©ic
) { \

1543 
	`DMERR
("%s isá static option", #name); \

1546 
îr
 = 
	`dm_ªad_¨g
(
_¨gs
 + (
ƒ
), 
as
, &
tmp
, &
ti
->
îr‹
); \

1547 i‡(
îr
) { \

1548 
	`DMERR
("%s", 
ti
->
îr‹
); \

1551 
wb
->
«me
 = 
tmp
; \

1552 } }

	)

1554 
	$do_c⁄sume_›ti⁄Æ_¨gv
(
wb_devi˚
 *
wb
, 
dm_¨g_£t
 *
as
, 
¨gc
)

1556 
îr
 = 0;

1557 
dm_èrgë
 *
ti
 = 
wb
->ti;

1559 
dm_¨g
 
_¨gs
[] = {

1571 
tmp
;

1573 
¨gc
) {

1574 c⁄° *
key
 = 
	`dm_shi·_¨g
(
as
);

1575 
¨gc
--;

1577 
îr
 = -
EINVAL
;

1579 
	`c⁄sume_kv
(
wrôeback_thªshﬁd
, 0, 
Ál£
);

1580 
	`c⁄sume_kv
(
ƒ_max_b©ched_wrôeback
, 1, 
Ál£
);

1581 
	`c⁄sume_kv
(
upd©e_sb_ªc‹d_öãrvÆ
, 2, 
Ál£
);

1582 
	`c⁄sume_kv
(
sync_d©a_öãrvÆ
, 3, 
Ál£
);

1583 
	`c⁄sume_kv
(
ªad_ˇche_thªshﬁd
, 4, 
Ál£
);

1584 
	`c⁄sume_kv
(
wrôe_¨ound_mode
, 5, 
åue
);

1585 
	`c⁄sume_kv
(
ƒ_ªad_ˇche_˚Œs
, 6, 
åue
);

1586 
	`c⁄sume_kv
(
ad≠tive_wrôe_mode
, 7, 
Ál£
);

1587 
	`c⁄sume_kv
(
£quítül_thªshﬁd
, 8, 
Ál£
);

1589 i‡(!
îr
) {

1590 
¨gc
--;

1592 
ti
->
îr‹
 = "Invalid optional key";

1597  
îr
;

1598 
	}
}

1600 
	$c⁄sume_›ti⁄Æ_¨gv
(
wb_devi˚
 *
wb
, 
dm_¨g_£t
 *
as
)

1602 
îr
 = 0;

1603 
dm_èrgë
 *
ti
 = 
wb
->ti;

1605 
dm_¨g
 
_¨gs
[] = {

1609 
¨gc
 = 0;

1611 i‡(
as
->
¨gc
) {

1612 
îr
 = 
	`dm_ªad_¨g_group
(
_¨gs
, 
as
, &
¨gc
, &
ti
->
îr‹
);

1613 i‡(
îr
) {

1614 
	`DMERR
("%s", 
ti
->
îr‹
);

1615  
îr
;

1619  
	`do_c⁄sume_›ti⁄Æ_¨gv
(
wb
, 
as
, 
¨gc
);

1620 
	}
}

1622 
DECLARE_DM_KCOPYD_THROTTLE_WITH_MODULE_PARM
(
wb_c›y_thrŸée
,

1625 
	$öô_c‹e_°ru˘
(
dm_èrgë
 *
ti
)

1627 
îr
 = 0;

1628 
wb_devi˚
 *
wb
;

1630 
îr
 = 
	`dm_£t_èrgë_max_io_Àn
(
ti
, 1 << 3);

1631 i‡(
îr
) {

1632 
	`DMERR
("FailedÅo set max_io_len");

1633  
îr
;

1636 
ti
->
num_Êush_bios
 = 1;

1637 
ti
->
Êush_suµ‹ãd
 = 
åue
;

1647 
ti
->
num_disˇrd_bios
 = 0;

1648 
ti
->
disˇrds_suµ‹ãd
 = 
Ál£
;

1650 
ti
->
PER_BIO_DATA_SIZE
 = (
≥r_bio_d©a
);

1652 
wb
 = 
	`kzÆloc
((*wb), 
GFP_KERNEL
);

1653 i‡(!
wb
) {

1654 
	`DMERR
("FailedÅoállocate wb");

1655  -
ENOMEM
;

1657 
ti
->
¥iv©e
 = 
wb
;

1658 
wb
->
ti
 =Åi;

1660 
wb
->
c›õr
 = 
	`dm_kc›yd_˛õ¡_¸óã
(&
dm_kc›yd_thrŸée
);

1661 i‡(
	`IS_ERR
(
wb
->
c›õr
)) {

1662 
îr
 = 
	`PTR_ERR
(
wb
->
c›õr
);

1663 
bad_kc›yd_˛õ¡
;

1666 
wb
->
buf_8_ˇchï
 = 
	`kmem_ˇche_¸óã
("dmwb_buf_8",

1667 1 << 12, 1 << 12, 
SLAB_RED_ZONE
, 
NULL
);

1668 i‡(!
wb
->
buf_8_ˇchï
) {

1669 
îr
 = -
ENOMEM
;

1670 
bad_buf_8_ˇchï
;

1672 
wb
->
buf_8_poﬁ
 = 
	`mempoﬁ_¸óã_¶ab_poﬁ
(16, wb->
buf_8_ˇchï
);

1673 i‡(!
wb
->
buf_8_poﬁ
) {

1674 
îr
 = -
ENOMEM
;

1675 
bad_buf_8_poﬁ
;

1678 
wb
->
io_wq
 = 
	`¸óã_sögÀthªad_w‹kqueue
("dmwb_io");

1679 i‡(!
wb
->
io_wq
) {

1680 
	`DMERR
("FailedÅoállocate io_wq");

1681 
îr
 = -
ENOMEM
;

1682 
bad_io_wq
;

1685 
wb
->
io_˛õ¡
 = 
	`dm_io_˛õ¡_¸óã
();

1686 i‡(
	`IS_ERR
(
wb
->
io_˛õ¡
)) {

1687 
	`DMERR
("FailedÅoállocate io_client");

1688 
îr
 = 
	`PTR_ERR
(
wb
->
io_˛õ¡
);

1689 
bad_io_˛õ¡
;

1692 
	`muãx_öô
(&
wb
->
io_lock
);

1693 
	`öô_waôqueue_hód
(&
wb
->
öÊight_ios_wq
);

1694 
	`•ö_lock_öô
(&
wb
->
mb_lock
);

1695 
	`©omic64_£t
(&
wb
->
ƒ_dúty_ˇches
, 0);

1696 
	`˛ór_bô
(
WB_CREATED
, &
wb
->
Êags
);

1698  
îr
;

1700 
bad_io_˛õ¡
:

1701 
	`de°roy_w‹kqueue
(
wb
->
io_wq
);

1702 
bad_io_wq
:

1703 
	`mempoﬁ_de°roy
(
wb
->
buf_8_poﬁ
);

1704 
bad_buf_8_poﬁ
:

1705 
	`kmem_ˇche_de°roy
(
wb
->
buf_8_ˇchï
);

1706 
bad_buf_8_ˇchï
:

1707 
	`dm_kc›yd_˛õ¡_de°roy
(
wb
->
c›õr
);

1708 
bad_kc›yd_˛õ¡
:

1709 
	`k‰ì
(
wb
);

1710  
îr
;

1711 
	}
}

1713 
	$‰ì_c‹e_°ru˘
(
wb_devi˚
 *
wb
)

1715 
	`dm_io_˛õ¡_de°roy
(
wb
->
io_˛õ¡
);

1716 
	`de°roy_w‹kqueue
(
wb
->
io_wq
);

1717 
	`mempoﬁ_de°roy
(
wb
->
buf_8_poﬁ
);

1718 
	`kmem_ˇche_de°roy
(
wb
->
buf_8_ˇchï
);

1719 
	`dm_kc›yd_˛õ¡_de°roy
(
wb
->
c›õr
);

1720 
	`k‰ì
(
wb
);

1721 
	}
}

1723 
	$c›y_˘r_¨gs
(
wb_devi˚
 *
wb
, 
¨gc
, c⁄° **
¨gv
)

1725 
i
;

1726 c⁄° **
c›y
;

1728 
c›y
 = 
	`kˇŒoc
(
¨gc
, (*c›y), 
GFP_KERNEL
);

1729 i‡(!
c›y
)

1730  -
ENOMEM
;

1731 
i
 = 0; i < 
¨gc
; i++) {

1732 
c›y
[
i
] = 
	`k°rdup
(
¨gv
[i], 
GFP_KERNEL
);

1733 i‡(!
c›y
[
i
]) {

1734 
i
--)

1735 
	`k‰ì
(
c›y
[
i
]);

1736 
	`k‰ì
(
c›y
);

1737  -
ENOMEM
;

1741 
wb
->
ƒ_˘r_¨gs
 = 
¨gc
;

1742 
wb
->
˘r_¨gs
 = 
c›y
;

1745 
	}
}

1747 
	$‰ì_˘r_¨gs
(
wb_devi˚
 *
wb
)

1749 
i
;

1750 
i
 = 0; i < 
wb
->
ƒ_˘r_¨gs
; i++)

1751 
	`k‰ì
(
wb
->
˘r_¨gs
[
i
]);

1752 
	`k‰ì
(
wb
->
˘r_¨gs
);

1753 
	}
}

1755 
	#ßve_¨g
(
«me
Ë
wb
->«me##
_ßved
 = wb->
	)
name

1756 
	#ª°‹e_¨g
(
«me
Ëi‡(
wb
->«me##
_ßved
Ë{ wb->«mêwb->«me##_ßved; }

	)

1767 
	$wrôeboo°_˘r
(
dm_èrgë
 *
ti
, 
¨gc
, **
¨gv
)

1769 
îr
 = 0;

1770 
wb_devi˚
 *
wb
;

1772 
dm_¨g_£t
 
as
;

1773 
as
.
¨gc
 =árgc;

1774 
as
.
¨gv
 =árgv;

1776 
îr
 = 
	`öô_c‹e_°ru˘
(
ti
);

1777 i‡(
îr
) {

1778 
ti
->
îr‹
 = "init_core_struct failed";

1779  
îr
;

1781 
wb
 = 
ti
->
¥iv©e
;

1783 
îr
 = 
	`c›y_˘r_¨gs
(
wb
, 
¨gc
 - 2, (c⁄° **)
¨gv
 + 2);

1784 i‡(
îr
) {

1785 
ti
->
îr‹
 = "copy_ctr_args failed";

1786 
bad_˘r_¨gs
;

1789 
îr
 = 
	`c⁄sume_es£¡ül_¨gv
(
wb
, &
as
);

1790 i‡(
îr
) {

1791 
ti
->
îr‹
 = "consume_essential_argv failed";

1792 
bad_es£¡ül_¨gv
;

1795 
îr
 = 
	`c⁄sume_›ti⁄Æ_¨gv
(
wb
, &
as
);

1796 i‡(
îr
) {

1797 
ti
->
îr‹
 = "consume_optional_argv failed";

1798 
bad_›ti⁄Æ_¨gv
;

1801 
	`ßve_¨g
(
wrôeback_thªshﬁd
);

1802 
	`ßve_¨g
(
ƒ_max_b©ched_wrôeback
);

1803 
	`ßve_¨g
(
upd©e_sb_ªc‹d_öãrvÆ
);

1804 
	`ßve_¨g
(
sync_d©a_öãrvÆ
);

1805 
	`ßve_¨g
(
ªad_ˇche_thªshﬁd
);

1806 
	`ßve_¨g
(
ƒ_ªad_ˇche_˚Œs
);

1807 
	`ßve_¨g
(
ad≠tive_wrôe_mode
);

1808 
	`ßve_¨g
(
£quítül_thªshﬁd
);

1810 
îr
 = 
	`ªsume_ˇche
(
wb
);

1811 i‡(
îr
) {

1812 
ti
->
îr‹
 = "resume_cache failed";

1813 
bad_ªsume_ˇche
;

1816 
wb
->
ƒ_ªad_ˇche_˚Œs
 = 2048;

1817 
	`ª°‹e_¨g
(
ƒ_ªad_ˇche_˚Œs
);

1818 
îr
 = 
	`öô_ªad_ˇche_˚Œs
(
wb
);

1819 i‡(
îr
) {

1820 
ti
->
îr‹
 = "init_read_cache_cells failed";

1821 
bad_ªad_ˇche_˚Œs
;

1824 
	`˛ór_°©
(
wb
);

1826 
	`£t_bô
(
WB_CREATED
, &
wb
->
Êags
);

1828 
	`ª°‹e_¨g
(
wrôeback_thªshﬁd
);

1829 
	`ª°‹e_¨g
(
ƒ_max_b©ched_wrôeback
);

1830 
	`ª°‹e_¨g
(
upd©e_sb_ªc‹d_öãrvÆ
);

1831 
	`ª°‹e_¨g
(
sync_d©a_öãrvÆ
);

1832 
	`ª°‹e_¨g
(
ªad_ˇche_thªshﬁd
);

1833 
	`ª°‹e_¨g
(
ad≠tive_wrôe_mode
);

1834 
	`ª°‹e_¨g
(
£quítül_thªshﬁd
);

1836  
îr
;

1838 
bad_ªad_ˇche_˚Œs
:

1839 
	`‰ì_ˇche
(
wb
);

1840 
bad_ªsume_ˇche
:

1841 
	`dm_put_devi˚
(
ti
, 
wb
->
ˇche_dev
);

1842 
	`dm_put_devi˚
(
ti
, 
wb
->
backög_dev
);

1843 
bad_›ti⁄Æ_¨gv
:

1844 
bad_es£¡ül_¨gv
:

1845 
	`‰ì_˘r_¨gs
(
wb
);

1846 
bad_˘r_¨gs
:

1847 
	`‰ì_c‹e_°ru˘
(
wb
);

1848 
ti
->
¥iv©e
 = 
NULL
;

1850  
îr
;

1851 
	}
}

1853 
	$wrôeboo°_då
(
dm_èrgë
 *
ti
)

1855 
wb_devi˚
 *
wb
 = 
ti
->
¥iv©e
;

1857 
	`‰ì_ªad_ˇche_˚Œs
(
wb
);

1859 
	`‰ì_ˇche
(
wb
);

1861 
	`dm_put_devi˚
(
ti
, 
wb
->
ˇche_dev
);

1862 
	`dm_put_devi˚
(
ti
, 
wb
->
backög_dev
);

1864 
	`‰ì_˘r_¨gs
(
wb
);

1866 
	`‰ì_c‹e_°ru˘
(
wb
);

1867 
ti
->
¥iv©e
 = 
NULL
;

1868 
	}
}

1876 
	$wrôeboo°_po°su•íd
(
dm_èrgë
 *
ti
)

1878 
wb_devi˚
 *
wb
 = 
ti
->
¥iv©e
;

1879 
	`Êush_cuºít_buf„r
(
wb
);

1880 
	`blkdev_issue_Êush
(
wb
->
ˇche_dev
->
bdev
, 
GFP_NOIO
, 
NULL
);

1881 
	}
}

1883 
	$wrôeboo°_mesßge
(
dm_èrgë
 *
ti
, 
¨gc
, **
¨gv
)

1885 
wb_devi˚
 *
wb
 = 
ti
->
¥iv©e
;

1887 
dm_¨g_£t
 
as
;

1888 
as
.
¨gc
 =árgc;

1889 
as
.
¨gv
 =árgv;

1891 i‡(!
	`°rˇ£cmp
(
¨gv
[0], "clear_stat")) {

1892 
	`˛ór_°©
(
wb
);

1896 i‡(!
	`°rˇ£cmp
(
¨gv
[0], "drop_caches")) {

1897 
îr
 = 0;

1898 
wb
->
f‹˚_dr›
 = 
åue
;

1899 
îr
 = 
	`waô_evít_öãºu±ibÀ
(
wb
->
waô_dr›_ˇches
,

1900 !
	`©omic64_ªad
(&
wb
->
ƒ_dúty_ˇches
));

1901 
wb
->
f‹˚_dr›
 = 
Ál£
;

1902  
îr
;

1905 if(!
	`°rˇ£cmp
(
¨gv
[0], "write_around_mode_true")) {

1906 
wb
->
wrôe_¨ound_mode
 = 
åue
;

1910 if(!
	`°rˇ£cmp
(
¨gv
[0], "write_around_mode_false")) {

1911 
wb
->
wrôe_¨ound_mode
 = 
Ál£
;

1915 i‡(!
	`°rˇ£cmp
(
¨gv
[0], "adaptive_write_mode_true")) {

1916 
wb
->
ad≠tive_wrôe_mode
 = 
åue
;

1920 i‡(!
	`°rˇ£cmp
(
¨gv
[0], "adaptive_write_mode_false")) {

1921 
wb
->
ad≠tive_wrôe_mode
 = 
Ál£
;

1925  
	`do_c⁄sume_›ti⁄Æ_¨gv
(
wb
, &
as
, 2);

1926 
	}
}

1928 
	$wrôeboo°_ôî©e_devi˚s
(
dm_èrgë
 *
ti
,

1929 
ôî©e_devi˚s_ˇŒout_‚
 
‚
, *
d©a
)

1931 
r
 = 0;

1932 
wb_devi˚
 *
wb
 = 
ti
->
¥iv©e
;

1934 
r
 = 
	`‚
(
ti
, 
wb
->
ˇche_dev
, 0, 
	`dm_devsize
(wb->ˇche_dev), 
d©a
);

1935 i‡(!
r
)

1936 
r
 = 
	`‚
(
ti
, 
wb
->
backög_dev
, 0,Åi->
Àn
, 
d©a
);

1938  
r
;

1939 
	}
}

1941 
	$wrôeboo°_io_höts
(
dm_èrgë
 *
ti
, 
queue_limôs
 *
limôs
)

1943 
	`blk_limôs_io_›t
(
limôs
, 4096);

1944 
	}
}

1946 
	$wrôeboo°_°©us
(
dm_èrgë
 *
ti
, 
°©us_ty≥_t
 
ty≥
,

1947 
Êags
, *
ªsu…
, 
maxÀn
)

1949 
ssize_t
 
sz
 = 0;

1950 
buf
[
BDEVNAME_SIZE
];

1951 
wb_devi˚
 *
wb
 = 
ti
->
¥iv©e
;

1952 
size_t
 
i
;

1954 
ty≥
) {

1955 
STATUSTYPE_INFO
:

1956 
	`DMEMIT
("\ncursor: %u\nnr_caches: %u\nnr_segments: %llu\ncurrent_seg->id: %llu\nqueued_Sid: %llu\nflush_Sid: %llu\nwriteback_Sid: %llu\nnr_dirty_caches: %llu\n",

1958 
wb
->
curs‹
,

1960 
wb
->
ƒ_ˇches
,

1962 
wb
->
ƒ_£gmíts
,

1964 
wb
->
cuºít_£g
->
id
,

1966 
	`©omic64_ªad
(&
wb
->
œ°_queued_£gmít_id
),

1968 
	`©omic64_ªad
(&
wb
->
œ°_Êushed_£gmít_id
),

1970 
	`©omic64_ªad
(&
wb
->
œ°_wrôeback_£gmít_id
),

1972 
	`©omic64_ªad
(&
wb
->
ƒ_dúty_ˇches
));

1974 
i
 = 0; i < 
STATLEN
; i++) {

1975 
©omic64_t
 *
v
 = &
wb
->
°©
[
i
];

1976 
	`DMEMIT
(" %Œu ", (Ë
	`©omic64_ªad
(
v
));

1978 
	`DMEMIT
(" %Œu\n", (Ë
	`©omic64_ªad
(&
wb
->
cou¡_n⁄_fuŒ_Êushed
));

1981 
	`DMEMIT
("Çr_max_batched_writeback: %d\n",

1982 
wb
->
ƒ_max_b©ched_wrôeback
);

1983 
	`DMEMIT
(" writeback_threshold: %d\n",

1984 
wb
->
wrôeback_thªshﬁd
);

1985 
	`DMEMIT
("Çr_cur_batched_writeback: %u\n",

1986 
wb
->
ƒ_cur_b©ched_wrôeback
);

1987 
	`DMEMIT
(" sync_data_interval: %lu\n",

1988 
wb
->
sync_d©a_öãrvÆ
);

1989 
	`DMEMIT
(" update_sb_record_interval: %lu\n",

1990 
wb
->
upd©e_sb_ªc‹d_öãrvÆ
);

1991 
	`DMEMIT
("Ñead_cache_threshold: %u\n",

1992 
wb
->
ªad_ˇche_thªshﬁd
);

1993 
	`DMEMIT
("Çr_empty_segs: %u\n",

1994 
wb
->
ƒ_em±y_£gs
);

1995 
	`DMEMIT
("Çr_read_cache_cells: %u\n",

1996 
wb
->
ƒ_ªad_ˇche_˚Œs
);

1997 
	`DMEMIT
(" write_around_mode: %u\n",

1998 
wb
->
wrôe_¨ound_mode
);

1999 
	`DMEMIT
("ádaptive_write_mode: %u\n",

2000 
wb
->
ad≠tive_wrôe_mode
);

2001 
	`DMEMIT
(" sequential_threshold: %u\n",

2002 
wb
->
£quítül_thªshﬁd
);

2005 
STATUSTYPE_TABLE
:

2006 
	`f‹m©_dev_t
(
buf
, 
wb
->
backög_dev
->
bdev
->
bd_dev
);

2007 
	`DMEMIT
("%s", 
buf
);

2008 
	`f‹m©_dev_t
(
buf
, 
wb
->
ˇche_dev
->
bdev
->
bd_dev
);

2009 
	`DMEMIT
(" %s", 
buf
);

2011 
i
 = 0; i < 
wb
->
ƒ_˘r_¨gs
; i++)

2012 
	`DMEMIT
(" %s", 
wb
->
˘r_¨gs
[
i
]);

2015 
	}
}

2017 
èrgë_ty≥
 
	gwrôeboo°_èrgë
 = {

2018 .
«me
 = "writeboost",

2019 .
	gvîsi⁄
 = {2, 2, 8},

2020 .
	gmoduÀ
 = 
THIS_MODULE
,

2021 .
	gm≠
 = 
wrôeboo°_m≠
,

2022 .
	gíd_io
 = 
wrôeboo°_íd_io
,

2023 .
	g˘r
 = 
wrôeboo°_˘r
,

2024 .
	gdå
 = 
wrôeboo°_då
,

2025 .
	gpo°su•íd
 = 
wrôeboo°_po°su•íd
,

2026 .
	gmesßge
 = 
wrôeboo°_mesßge
,

2027 .
	g°©us
 = 
wrôeboo°_°©us
,

2028 .
	gio_höts
 = 
wrôeboo°_io_höts
,

2029 .
	gôî©e_devi˚s
 = 
wrôeboo°_ôî©e_devi˚s
,

2032 
__öô
 
	$wrôeboo°_moduÀ_öô
()

2034 
îr
 = 0;

2036 
îr
 = 
	`dm_ªgi°î_èrgë
(&
wrôeboo°_èrgë
);

2037 i‡(
îr
 < 0) {

2038 
	`DMERR
("FailedÅoÑegisterÅarget");

2039  
îr
;

2042  
îr
;

2043 
	}
}

2045 
__exô
 
	$wrôeboo°_moduÀ_exô
()

2047 
	`dm_uƒegi°î_èrgë
(&
wrôeboo°_èrgë
);

2048 
	}
}

2050 
moduÀ_öô
(
wrôeboo°_moduÀ_öô
);

2051 
moduÀ_exô
(
wrôeboo°_moduÀ_exô
);

2053 
MODULE_AUTHOR
("Akira Hayakawa <ruby.wktk@gmail.com>");

2054 
MODULE_DESCRIPTION
(
DM_NAME
 " writeboostÅarget");

2055 
MODULE_LICENSE
("GPL");

	@dm-writeboost.h

20 #i‚de‡
DM_WRITEBOOST_H


21 
	#DM_WRITEBOOST_H


	)

23 
	#DM_MSG_PREFIX
 "wrôeboo°"

	)

25 
	~<löux/moduÀ.h
>

26 
	~<löux/vîsi⁄.h
>

27 
	~<löux/li°.h
>

28 
	~<löux/¶ab.h
>

29 
	~<löux/vmÆloc.h
>

30 
	~<löux/muãx.h
>

31 
	~<löux/kthªad.h
>

32 
	~<löux/sched.h
>

33 
	~<löux/timî.h
>

34 
	~<löux/w‹kqueue.h
>

35 
	~<löux/¸c32c.h
>

36 
	~<löux/devi˚-m≠≥r.h
>

37 
	~<löux/dm-io.h
>

38 
	~<löux/dm-kc›yd.h
>

41 #i‚de‡
RHEL_RELEASE_CODE


42 
	#RHEL_RELEASE_CODE
 0

	)

43 
	#RHEL_RELEASE_VERSION
(
a
,
b
Ë((◊Ë<< 8Ë+ (b))

	)

48 
	#SUB_ID
(
x
, 
y
Ë((xË> (yË? (xË- (yË: 0)

	)

77 
	#WB_MAGIC
 0x57427374

	)

78 
	ssu≥rblock_hódî_devi˚
 {

79 
__À32
 
	mmagic
;

80 } 
	g__∑cked
;

88 
	ssu≥rblock_ªc‹d_devi˚
 {

89 
__À64
 
	mœ°_wrôeback_£gmít_id
;

90 } 
	g__∑cked
;

98 
	smëablock_devi˚
 {

99 
__À64
 
	m£˘‹
;

100 
__u8
 
	mdúty_bôs
;

101 
__u8
 
	m∑ddög
[16 - (8 + 1)];

102 } 
	g__∑cked
;

104 
	s£gmít_hódî_devi˚
 {

112 
__À64
 
	mid
;

113 
__À32
 
	mchecksum
;

118 
__u8
 
	mÀngth
;

119 
__u8
 
	m∑ddög
[512 - (8 + 4 + 1)];

121 
mëablock_devi˚
 
	mmb¨r
[0];

122 } 
	g__∑cked
;

126 
	sdútöess
 {

127 
boﬁ
 
	mis_dúty
;

128 
u8
 
	md©a_bôs
;

131 
	smëablock
 {

133 
£˘‹_t
 
	m£˘‹
;

135 
u32
 
	midx
;

137 
hli°_node
 
	mht_li°
;

139 
dútöess
 
	mdútöess
;

142 
	#SZ_MAX
 (~(
size_t
)0)

	)

143 
	s£gmít_hódî
 {

144 
u64
 
	mid
;

146 
u8
 
	mÀngth
;

148 
u32
 
	m°¨t_idx
;

149 
£˘‹_t
 
	m°¨t_£˘‹
;

151 
©omic_t
 
	mƒ_öÊight_ios
;

153 
mëablock
 
	mmb_¨øy
[0];

161 
	sømbuf„r
 {

162 
£gmít_hódî
 *
	m£g
;

163 *
	md©a
;

164 
bio_li°
 
	mb¨rõr_ios
;

185 
	swrôeback_io
 {

186 
rb_node
 
	mrb_node
;

188 
£˘‹_t
 
	m£˘‹
;

189 
u64
 
	mid
;

191 *
	md©a
;

192 
u8
 
	md©a_bôs
;

194 
	#wrôeback_io_‰om_node
(
node
) \

195 
	`rb_íåy
((
node
), 
wrôeback_io
, 
rb_node
)

	)

200 
	swrôeback_£gmít
 {

201 
£gmít_hódî
 *
	m£g
;

202 
wrôeback_io
 *
	mios
;

203 *
	mbuf
;

208 
	sªad_ˇche_˚Œ
 {

209 
£˘‹_t
 
	m£˘‹
;

210 *
	md©a
;

211 
boﬁ
 
	mˇn˚Œed
;

212 
rb_node
 
	mrb_node
;

215 
	sªad_ˇche_˚Œs
 {

216 
u32
 
	msize
;

217 
ªad_ˇche_˚Œ
 *
	m¨øy
;

218 
u32
 
	mcurs‹
;

219 
©omic_t
 
	mack_cou¡
;

220 
£˘‹_t
 
	mœ°_£˘‹
;

221 
u32
 
	m£qcou¡
;

222 
u32
 
	mthªshﬁd
;

223 
boﬁ
 
	movî_thªshﬁd
;

229 
rb_roŸ
 
	mrb_roŸ
;

230 
w‹kqueue_°ru˘
 *
	mwq
;

235 
	eSTATFLAG
 {

236 
	mSTAT_WRITE
 = 3,

237 
	mSTAT_HIT
 = 2,

238 
	mSTAT_ON_BUFFER
 = 1,

239 
	mSTAT_FULLSIZE
 = 0,

241 
	#STATLEN
 (1 << 4)

	)

243 
	eWB_FLAG
 {

244 
	mWB_CREATED
 = 0,

247 
	#SEGMENT_SIZE_ORDER
 10

	)

248 
	#NR_RAMBUF_POOL
 8

	)

253 
	swb_devi˚
 {

254 
dm_èrgë
 *
	mti
;

256 
dm_dev
 *
	mbackög_dev
;

257 
dm_dev
 *
	mˇche_dev
;

259 
boﬁ
 
	mwrôe_¨ound_mode
;

261 
	mƒ_˘r_¨gs
;

262 c⁄° **
	m˘r_¨gs
;

264 
boﬁ
 
	mdo_f‹m©
;

265 
muãx
 
	mio_lock
;

273 
waô_queue_hód_t
 
	möÊight_ios_wq
;

275 
•ölock_t
 
	mmb_lock
;

277 
u8
 
	mƒ_ˇches_ö£g
;

279 
kmem_ˇche
 *
	mbuf_8_ˇchï
;

280 
mempoﬁ_t
 *
	mbuf_8_poﬁ
;

281 
w‹kqueue_°ru˘
 *
	mio_wq
;

282 
dm_io_˛õ¡
 *
	mio_˛õ¡
;

290 
u32
 
	mcurs‹
;

291 
£gmít_hódî
 *
	mcuºít_£g
;

292 
ømbuf„r
 *
	mcuºít_ømbuf
;

300 
u32
 
	mƒ_£gmíts
;

301 
œrge_¨øy
 *
	m£gmít_hódî_¨øy
;

309 
u32
 
	mƒ_ˇches
;

310 
œrge_¨øy
 *
	mhèbÀ
;

311 
size_t
 
	mhtsize
;

318 
ht_hód
 *
	mnuŒ_hód
;

326 
ømbuf„r
 *
	mømbuf_poﬁ
;

328 
©omic64_t
 
	mœ°_queued_£gmít_id
;

336 
dm_kc›yd_˛õ¡
 *
	mc›õr
;

344 
èsk_°ru˘
 *
	mÊush_d´m⁄
;

350 
waô_queue_hód_t
 
	mÊush_waô_queue
;

352 
©omic64_t
 
	mœ°_Êushed_£gmít_id
;

364 
w‹kqueue_°ru˘
 *
	mb¨rõr_wq
;

365 
w‹k_°ru˘
 
	mÊush_b¨rõr_w‹k
;

366 
bio_li°
 
	mb¨rõr_ios
;

374 
èsk_°ru˘
 *
	mwrôeback_d´m⁄
;

375 
	mÆlow_wrôeback
;

376 
	murge_wrôeback
;

377 
	mf‹˚_dr›
;

378 
©omic64_t
 
	mœ°_wrôeback_£gmít_id
;

384 
waô_queue_hód_t
 
	mwrôeback_waô_queue
;

389 
waô_queue_hód_t
 
	mwaô_dr›_ˇches
;

390 
©omic64_t
 
	mƒ_dúty_ˇches
;

395 
waô_queue_hód_t
 
	mwrôeback_io_waô_queue
;

396 
©omic_t
 
	mwrôeback_io_cou¡
;

397 
©omic_t
 
	mwrôeback_Áû_cou¡
;

399 
u32
 
	mƒ_max_b©ched_wrôeback
;

400 
u32
 
	mƒ_max_b©ched_wrôeback_ßved
;

402 
rb_roŸ
 
	mwrôeback_åì
;

404 
u32
 
	mƒ_wrôeback_£gs
;

405 
wrôeback_£gmít
 **
	mwrôeback_£gs
;

406 
u32
 
	mƒ_cur_b©ched_wrôeback
;

407 
u32
 
	mƒ_em±y_£gs
;

415 
èsk_°ru˘
 *
	mwrôeback_moduœt‹
;

416 
u8
 
	mwrôeback_thªshﬁd
;

417 
u8
 
	mwrôeback_thªshﬁd_ßved
;

425 
èsk_°ru˘
 *
	msb_ªc‹d_upd©î
;

426 
	mupd©e_sb_ªc‹d_öãrvÆ
;

427 
	mupd©e_sb_ªc‹d_öãrvÆ_ßved
;

435 
èsk_°ru˘
 *
	md©a_synchr⁄izî
;

436 
	msync_d©a_öãrvÆ
;

437 
	msync_d©a_öãrvÆ_ßved
;

445 
u32
 
	mƒ_ªad_ˇche_˚Œs
;

446 
u32
 
	mƒ_ªad_ˇche_˚Œs_ßved
;

447 
w‹k_°ru˘
 
	mªad_ˇche_w‹k
;

448 
ªad_ˇche_˚Œs
 *
	mªad_ˇche_˚Œs
;

449 
u32
 
	mªad_ˇche_thªshﬁd
;

450 
u32
 
	mªad_ˇche_thªshﬁd_ßved
;

458 
©omic64_t
 
	m°©
[
STATLEN
];

459 
©omic64_t
 
	mcou¡_n⁄_fuŒ_Êushed
;

463 
	mÊags
;

468 
boﬁ
 
	mad≠tive_wrôe_mode
;

469 
boﬁ
 
	mad≠tive_wrôe_mode_ßved
;

471 
u8
 
	m£quítül_thªshﬁd
;

472 
u8
 
	m£quítül_thªshﬁd_ßved
;

477 
	swrôe_io
 {

478 *
	md©a
;

479 
u8
 
	md©a_bôs
;

482 
acquúe_√w_£g
(
wb_devi˚
 *, 
u64
 
id
);

483 
curs‹_öô
(
wb_devi˚
 *);

484 
Êush_cuºít_buf„r
(
wb_devi˚
 *);

485 
öc_ƒ_dúty_ˇches
(
wb_devi˚
 *);

486 
dec_ƒ_dúty_ˇches
(
wb_devi˚
 *);

487 
boﬁ
 
m¨k_˛ón_mb
(
wb_devi˚
 *, 
mëablock
 *);

488 
dútöess
 
ªad_mb_dútöess
(
wb_devi˚
 *, 
£gmít_hódî
 *, 
mëablock
 *);

489 
¥ï¨e_ovîwrôe
(
wb_devi˚
 *, 
£gmít_hódî
 *, 
mëablock
 *
ﬁd_mb
, 
wrôe_io
 *, 
u8
 
ovîwrôe_bôs
);

493 
	#ASSERT
(
c⁄d
Ë
	`BUG_ON
(!(c⁄d))

	)

495 
	#check_buf„r_Æignmít
(
buf
) \

496 
	`do_check_buf„r_Æignmít
(
buf
, #buf, 
__func__
)

	)

497 
do_check_buf„r_Æignmít
(*, const *, const *);

499 
bio_io_suc˚ss_com∑t
(
bio
 *bio);

505 
	#wb_io
(
io_ªq
, 
num_ªgi⁄s
, 
ªgi⁄s
, 
îr_bôs
, 
thªad
) \

506 
	`wb_io_öã∫Æ
(
wb
, (
io_ªq
), (
num_ªgi⁄s
), (
ªgi⁄s
), \

507 (
îr_bôs
), (
thªad
), 
__func__
)

	)

508 
wb_io_öã∫Æ
(
wb_devi˚
 *, 
dm_io_ªque°
 *,

509 
num_ªgi⁄s
, 
dm_io_ªgi⁄
 *,

510 *
îr_bôs
, 
boﬁ
 
thªad
, c⁄° *
ˇŒî
);

512 
£˘‹_t
 
dm_devsize
(
dm_dev
 *);

516 #i‡
LINUX_VERSION_CODE
 >
KERNEL_VERSION
(4,8,0)

517 
	#ªq_is_wrôe
(
ªq
Ë
	`›_is_wrôe
(‘eq)->
bi_›
)

	)

518 
	#bio_is_b¨rõr
(
bio
Ë((bio)->
bi_›f
 & 
REQ_PREFLUSH
)

	)

519 
	#bio_is_fua
(
bio
Ë((bio)->
bi_›f
 & 
REQ_FUA
)

	)

520 
	#WB_IO_WRITE
 .
bi_›
 = 
REQ_OP_WRITE
, .
bi_›_Êags
 = 0

	)

521 
	#WB_IO_READ
 .
bi_›
 = 
REQ_OP_READ
, .
bi_›_Êags
 = 0

	)

522 
	#WB_IO_WRITE_FUA
 .
bi_›
 = 
REQ_OP_WRITE
, .
bi_›_Êags
 = 
REQ_FUA


	)

524 
	#ªq_is_wrôe
(
ªq
Ë(‘eq)->
bi_rw
 =
WRITE
)

	)

525 
	#bio_is_b¨rõr
(
bio
Ë((bio)->
bi_rw
 & 
REQ_FLUSH
)

	)

526 
	#bio_is_fua
(
bio
Ë((bio)->
bi_rw
 & 
REQ_FUA
)

	)

527 
	#WB_IO_WRITE
 .
bi_rw
 = 
WRITE


	)

528 
	#WB_IO_READ
 .
bi_rw
 = 
READ


	)

529 
	#WB_IO_WRITE_FUA
 .
bi_rw
 = 
WRITE_FUA


	)

	@/usr/include/linux/sched.h

1 #i‚de‡
_LINUX_SCHED_H


2 
	#_LINUX_SCHED_H


	)

7 
	#CSIGNAL
 0x000000f‡

	)

8 
	#CLONE_VM
 0x00000100

	)

9 
	#CLONE_FS
 0x00000200

	)

10 
	#CLONE_FILES
 0x00000400

	)

11 
	#CLONE_SIGHAND
 0x00000800

	)

12 
	#CLONE_PTRACE
 0x00002000

	)

13 
	#CLONE_VFORK
 0x00004000

	)

14 
	#CLONE_PARENT
 0x00008000

	)

15 
	#CLONE_THREAD
 0x00010000

	)

16 
	#CLONE_NEWNS
 0x00020000

	)

17 
	#CLONE_SYSVSEM
 0x00040000

	)

18 
	#CLONE_SETTLS
 0x00080000

	)

19 
	#CLONE_PARENT_SETTID
 0x00100000

	)

20 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

21 
	#CLONE_DETACHED
 0x00400000

	)

22 
	#CLONE_UNTRACED
 0x00800000

	)

23 
	#CLONE_CHILD_SETTID
 0x01000000

	)

26 
	#CLONE_NEWUTS
 0x04000000

	)

27 
	#CLONE_NEWIPC
 0x08000000

	)

28 
	#CLONE_NEWUSER
 0x10000000

	)

29 
	#CLONE_NEWPID
 0x20000000

	)

30 
	#CLONE_NEWNET
 0x40000000

	)

31 
	#CLONE_IO
 0x80000000

	)

36 
	#SCHED_NORMAL
 0

	)

37 
	#SCHED_FIFO
 1

	)

38 
	#SCHED_RR
 2

	)

39 
	#SCHED_BATCH
 3

	)

41 
	#SCHED_IDLE
 5

	)

43 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

	@/usr/include/linux/version.h

1 
	#LINUX_VERSION_CODE
 199947

	)

2 
	#KERNEL_VERSION
(
a
,
b
,
c
Ë((◊Ë<< 16Ë+ ((bË<< 8Ë+ (c))

	)

	@
1
.
1
/usr/include
8
191
dm-writeboost-daemon.c
dm-writeboost-daemon.h
dm-writeboost-metadata.c
dm-writeboost-metadata.h
dm-writeboost-target.c
dm-writeboost.h
/usr/include/linux/sched.h
/usr/include/linux/version.h
